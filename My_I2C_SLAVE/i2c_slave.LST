C51 COMPILER V9.00   I2C_SLAVE                                                             10/29/2013 11:04:50 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE I2C_SLAVE
OBJECT MODULE PLACED IN i2c_slave.OBJ
COMPILER INVOKED BY: C:\Program Files\Keil\C51\BIN\C51.EXE i2c_slave.c LARGE OPTIMIZE(9,SPEED) BROWSE ORDER NOAREGS MODA
                    -B2 DEBUG OBJECTEXTEND CODE SYMBOLS

line level    source

   1          #include "i2c_slave.h"
   2          #define REQUEST 0x12//ключевое слово запроса
   3          
   4          #define  TH0_VAL 0x0
   5          #define  TL0_VAL 0x0
   6          #define WATCH_I2C       30
   7          
   8          sbit FL1=P2^0;
   9          sbit FL2=P2^1;
  10          volatile unsigned char test_buf[15]={0x1,0x2,0x3,0x4,0x5,0x6,0x7,0x8,0x9,0xA,0xB,0xC,0xD,0xE,0xF};
  11          //--------------------------------------------------------
  12            unsigned char code Crc8Table[256]={0x00, 0xBC, 0x01, 0xBD, 0x02, 0xBE, 0x03, 0xBF, 
  13                                                                                   0x04, 0xB8, 0x05, 0xB9, 0x06, 0xBA, 0x07, 0xBB, 
  14                                                                                   0x08, 0xB4, 0x09, 0xB5, 0x0A, 0xB6, 0x0B, 0xB7, 
  15                                                                                   0x0C, 0xB0, 0x0D, 0xB1, 0x0E, 0xB2, 0x0F, 0xB3, 
  16                                                                                   0x10, 0xAC, 0x11, 0xAD, 0x12, 0xAE, 0x13, 0xAF, 
  17                                                                                   0x14, 0xA8, 0x15, 0xA9, 0x16, 0xAA, 0x17, 0xAB, 
  18                                                                                   0x18, 0xA4, 0x19, 0xA5, 0x1A, 0xA6, 0x1B, 0xA7, 
  19                                                                                   0x1C, 0xA0, 0x1D, 0xA1, 0x1E, 0xA2, 0x1F, 0xA3, 
  20                                                                                   0x20, 0x9C, 0x21, 0x9D, 0x22, 0x9E, 0x23, 0x9F, 
  21                                                                                   0x24, 0x98, 0x25, 0x99, 0x26, 0x9A, 0x27, 0x9B, 
  22                                                                                   0x28, 0x94, 0x29, 0x95, 0x2A, 0x96, 0x2B, 0x97, 
  23                                                                                   0x2C, 0x90, 0x2D, 0x91, 0x2E, 0x92, 0x2F, 0x93, 
  24                                                                                   0x30, 0x8C, 0x31, 0x8D, 0x32, 0x8E, 0x33, 0x8F, 
  25                                                                                   0x34, 0x88, 0x35, 0x89, 0x36, 0x8A, 0x37, 0x8B, 
  26                                                                                   0x38, 0x84, 0x39, 0x85, 0x3A, 0x86, 0x3B, 0x87, 
  27                                                                                   0x3C, 0x80, 0x3D, 0x81, 0x3E, 0x82, 0x3F, 0x83, 
  28                                                                                   0x40, 0xFC, 0x41, 0xFD, 0x42, 0xFE, 0x43, 0xFF, 
  29                                                                                   0x44, 0xF8, 0x45, 0xF9, 0x46, 0xFA, 0x47, 0xFB, 
  30                                                                                   0x48, 0xF4, 0x49, 0xF5, 0x4A, 0xF6, 0x4B, 0xF7, 
  31                                                                                   0x4C, 0xF0, 0x4D, 0xF1, 0x4E, 0xF2, 0x4F, 0xF3, 
  32                                                                                   0x50, 0xEC, 0x51, 0xED, 0x52, 0xEE, 0x53, 0xEF, 
  33                                                                                   0x54, 0xE8, 0x55, 0xE9, 0x56, 0xEA, 0x57, 0xEB, 
  34                                                                                   0x58, 0xE4, 0x59, 0xE5, 0x5A, 0xE6, 0x5B, 0xE7, 
  35                                                                                   0x5C, 0xE0, 0x5D, 0xE1, 0x5E, 0xE2, 0x5F, 0xE3, 
  36                                                                                   0x60, 0xDC, 0x61, 0xDD, 0x62, 0xDE, 0x63, 0xDF, 
  37                                                                                   0x64, 0xD8, 0x65, 0xD9, 0x66, 0xDA, 0x67, 0xDB, 
  38                                                                                   0x68, 0xD4, 0x69, 0xD5, 0x6A, 0xD6, 0x6B, 0xD7, 
  39                                                                                   0x6C, 0xD0, 0x6D, 0xD1, 0x6E, 0xD2, 0x6F, 0xD3, 
  40                                                                                   0x70, 0xCC, 0x71, 0xCD, 0x72, 0xCE, 0x73, 0xCF, 
  41                                                                                   0x74, 0xC8, 0x75, 0xC9, 0x76, 0xCA, 0x77, 0xCB, 
  42                                                                                   0x78, 0xC4, 0x79, 0xC5, 0x7A, 0xC6, 0x7B, 0xC7, 
  43                                                                                   0x7C, 0xC0, 0x7D, 0xC1, 0x7E, 0xC2, 0x7F, 0xC3};
  44          //--------------------------------------------------------
  45          volatile unsigned char req=0;
  46          volatile unsigned char count=0;
  47          volatile unsigned char watch_timer=WATCH_I2C;//следящий за зависанием таймер
  48          
  49          //--------------------------------------------------------
  50          void I2C_Slave_Init(void) //инициализация узла i2c slave
  51          {
  52   1              I2CCON=0x00; // ведомый
  53   1              I2CADD=0x58;
  54   1              IEIP2|=0x1; // разрешение прерывания от I2C     
C51 COMPILER V9.00   I2C_SLAVE                                                             10/29/2013 11:04:50 PAGE 2   

  55   1              channels.transfer=0;
  56   1              //----------------------------------    
  57   1              TMOD &= 0xF0; // 1111 0000 
  58   1              TMOD |= 0x1; // 16 bit timer-watcdog
  59   1      
  60   1              TH0     = TH0_VAL; /// 
  61   1              TL0 = TL0_VAL;//
  62   1              watch_timer=WATCH_I2C;
  63   1      
  64   1              ET0=1;
  65   1              TR0=1;
  66   1      
  67   1              channels.I2C_CHNL.channels.state_byte=0xC0;
  68   1              //----------------------------------
  69   1              return;
  70   1      }
  71          //--------------------------------------------------------
  72          void I2C_ISR(void) interrupt 7//прерывание I2C
  73          {
  74   1              if(I2CTX==0)  //прием
  75   1              { 
  76   2                      req=I2CDAT;
  77   2                      
  78   2      
  79   2                      FL1=channels.I2C_CHNL.channels.state_byte&0x80;
  80   2      
  81   2                      channels.I2C_CHNL.channels.DOL=channels.DOL_buf;//копируем данные дола
  82   2                      channels.I2C_CHNL.channels.frequency=channels.frequency_buf;
  83   2                      channels.I2C_CHNL.channels.mid_frequency=channels.mid_frequency_buf;
  84   2                                                       
  85   2                                      
  86   2      
  87   2                      count=0;
  88   2                      //channels.transfer=1;
  89   2      
  90   2                      watch_timer=WATCH_I2C; //сброс сторожевого таймера
  91   2                      TH0     = TH0_VAL; /// 
  92   2                      TL0 = TL0_VAL;//
  93   2                      if(req==0x12)//сброс байта статуса
  94   2                      {
  95   3                              channels.I2C_CHNL.channels.state_byte=0x40;     
  96   3                      //      channels.transfer=0;
  97   3                      }
  98   2              }
  99   1              else   //передача
 100   1              {
 101   2                      if(count<11)
 102   2                      {               
 103   3                              I2CDAT=channels.I2C_CHNL.i2c_buf[count];
 104   3                              count++;
 105   3                              
 106   3                              if(count==10)
 107   3                              {
 108   4                                      channels.I2C_CHNL.channels.CRC=CRC_Check(channels.I2C_CHNL.i2c_buf,10);
 109   4                                      //channels.transfer=0;
 110   4                              }
 111   3                      }
 112   2              }
 113   1              return;
 114   1      }
 115          //--------------------------------------------------------
 116          void Timer0_ISR(void) interrupt 1
C51 COMPILER V9.00   I2C_SLAVE                                                             10/29/2013 11:04:50 PAGE 3   

 117          {
 118   1              TF0=0;
 119   1              TH0     = TH0_VAL; /// 
 120   1              TL0 = TL0_VAL;//
 121   1              watch_timer--;
 122   1      
 123   1              if(watch_timer==0)
 124   1              {
 125   2                      I2CRS=1;
 126   2                      I2CRS=0;
 127   2                      watch_timer=WATCH_I2C;
 128   2                      
 129   2              }
 130   1              return;
 131   1      }
 132          //-----------------------CRC------------------------------------------------------------
 133            unsigned char CRC_Check( unsigned char xdata *Spool_pr,unsigned char Count_pr ) 
 134           {
 135   1      
 136   1           unsigned char crc = 0x0;
 137   1      
 138   1           while (Count_pr--)
 139   1               crc = Crc8Table[crc ^ *Spool_pr++];
 140   1      
 141   1           return crc;
 142   1      
 143   1       }
 144          
 145          //-----------------------------------------------------------------------------------------------
C51 COMPILER V9.00   I2C_SLAVE                                                             10/29/2013 11:04:50 PAGE 4   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION I2C_Slave_Init (BEGIN)
                                           ; SOURCE LINE # 50
                                           ; SOURCE LINE # 51
                                           ; SOURCE LINE # 52
0000 E4                CLR     A
0001 F5E8              MOV     I2CCON,A
                                           ; SOURCE LINE # 53
0003 759B58            MOV     I2CADD,#058H
                                           ; SOURCE LINE # 54
0006 43A901            ORL     IEIP2,#01H
                                           ; SOURCE LINE # 55
0009 900000      E     MOV     DPTR,#channels+0BH
000C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 57
000D 5389F0            ANL     TMOD,#0F0H
                                           ; SOURCE LINE # 58
0010 438901            ORL     TMOD,#01H
                                           ; SOURCE LINE # 60
0013 F58C              MOV     TH0,A
                                           ; SOURCE LINE # 61
0015 F58A              MOV     TL0,A
                                           ; SOURCE LINE # 62
0017 900000      R     MOV     DPTR,#watch_timer
001A 741E              MOV     A,#01EH
001C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 64
001D D2A9              SETB    ET0
                                           ; SOURCE LINE # 65
001F D28C              SETB    TR0
                                           ; SOURCE LINE # 67
0021 900000      E     MOV     DPTR,#channels+09H
0024 74C0              MOV     A,#0C0H
0026 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 70
0027         ?C0001:
0027 22                RET     
             ; FUNCTION I2C_Slave_Init (END)

             ; FUNCTION I2C_ISR (BEGIN)
0000 C0E0              PUSH    ACC
0002 C0F0              PUSH    B
0004 C083              PUSH    DPH
0006 C082              PUSH    DPL
0008 05A7              INC     DPCON
000A C083              PUSH    DPH
000C C082              PUSH    DPL
000E C0A7              PUSH    DPCON
0010 75A700            MOV     DPCON,#00H
0013 C0D0              PUSH    PSW
0015 E8                MOV     A,R0
0016 C0E0              PUSH    ACC
0018 E9                MOV     A,R1
0019 C0E0              PUSH    ACC
001B EA                MOV     A,R2
001C C0E0              PUSH    ACC
001E EB                MOV     A,R3
001F C0E0              PUSH    ACC
0021 EC                MOV     A,R4
0022 C0E0              PUSH    ACC
C51 COMPILER V9.00   I2C_SLAVE                                                             10/29/2013 11:04:50 PAGE 5   

0024 ED                MOV     A,R5
0025 C0E0              PUSH    ACC
0027 EE                MOV     A,R6
0028 C0E0              PUSH    ACC
002A EF                MOV     A,R7
002B C0E0              PUSH    ACC
                                           ; SOURCE LINE # 72
                                           ; SOURCE LINE # 74
002D 20E95E            JB      I2CTX,?C0002
                                           ; SOURCE LINE # 75
                                           ; SOURCE LINE # 76
0030 900000      R     MOV     DPTR,#req
0033 E59A              MOV     A,I2CDAT
0035 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 79
0036 900000      E     MOV     DPTR,#channels+09H
0039 E0                MOVX    A,@DPTR
003A 33                RLC     A
003B 92A0              MOV     FL1,C
                                           ; SOURCE LINE # 81
003D 900000      E     MOV     DPTR,#channels+0CH
0040 E0                MOVX    A,@DPTR
0041 FC                MOV     R4,A
0042 A3                INC     DPTR
0043 E0                MOVX    A,@DPTR
0044 FD                MOV     R5,A
0045 A3                INC     DPTR
0046 E0                MOVX    A,@DPTR
0047 FE                MOV     R6,A
0048 A3                INC     DPTR
0049 E0                MOVX    A,@DPTR
004A FF                MOV     R7,A
004B 900000      E     MOV     DPTR,#channels
004E 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 82
0051 900000      E     MOV     DPTR,#channels+010H
0054 E0                MOVX    A,@DPTR
0055 FF                MOV     R7,A
0056 A3                INC     DPTR
0057 E0                MOVX    A,@DPTR
0058 900000      E     MOV     DPTR,#channels+05H
005B CF                XCH     A,R7
005C F0                MOVX    @DPTR,A
005D A3                INC     DPTR
005E EF                MOV     A,R7
005F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 83
0060 900000      E     MOV     DPTR,#channels+012H
0063 E0                MOVX    A,@DPTR
0064 FF                MOV     R7,A
0065 A3                INC     DPTR
0066 E0                MOVX    A,@DPTR
0067 900000      E     MOV     DPTR,#channels+07H
006A CF                XCH     A,R7
006B F0                MOVX    @DPTR,A
006C A3                INC     DPTR
006D EF                MOV     A,R7
006E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 87
006F 900000      R     MOV     DPTR,#count
0072 E4                CLR     A
0073 F0                MOVX    @DPTR,A
C51 COMPILER V9.00   I2C_SLAVE                                                             10/29/2013 11:04:50 PAGE 6   

                                           ; SOURCE LINE # 90
0074 A3                INC     DPTR
0075 741E              MOV     A,#01EH
0077 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 91
0078 758C00            MOV     TH0,#00H
                                           ; SOURCE LINE # 92
007B 758A00            MOV     TL0,#00H
                                           ; SOURCE LINE # 93
007E 900000      R     MOV     DPTR,#req
0081 E0                MOVX    A,@DPTR
0082 6412              XRL     A,#012H
0084 7036              JNZ     ?C0007
                                           ; SOURCE LINE # 94
                                           ; SOURCE LINE # 95
0086 900000      E     MOV     DPTR,#channels+09H
0089 7440              MOV     A,#040H
008B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 97
                                           ; SOURCE LINE # 98
008C 802E              SJMP    ?C0007
008E         ?C0002:
                                           ; SOURCE LINE # 100
                                           ; SOURCE LINE # 101
008E 900000      R     MOV     DPTR,#count
0091 E0                MOVX    A,@DPTR
0092 C3                CLR     C
0093 940B              SUBB    A,#0BH
0095 5025              JNC     ?C0007
                                           ; SOURCE LINE # 102
                                           ; SOURCE LINE # 103
0097 E0                MOVX    A,@DPTR
0098 2400        E     ADD     A,#LOW channels
009A F582              MOV     DPL,A
009C E4                CLR     A
009D 3400        E     ADDC    A,#HIGH channels
009F F583              MOV     DPH,A
00A1 E0                MOVX    A,@DPTR
00A2 F59A              MOV     I2CDAT,A
                                           ; SOURCE LINE # 104
00A4 900000      R     MOV     DPTR,#count
00A7 E0                MOVX    A,@DPTR
00A8 04                INC     A
00A9 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 106
00AA E0                MOVX    A,@DPTR
00AB B40A0E            CJNE    A,#0AH,?C0007
                                           ; SOURCE LINE # 107
                                           ; SOURCE LINE # 108
00AE 7E00        E     MOV     R6,#HIGH channels
00B0 7F00        E     MOV     R7,#LOW channels
00B2 7D0A              MOV     R5,#0AH
00B4 120000      R     LCALL   _CRC_Check
00B7 900000      E     MOV     DPTR,#channels+0AH
00BA EF                MOV     A,R7
00BB F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 110
                                           ; SOURCE LINE # 111
                                           ; SOURCE LINE # 112
                                           ; SOURCE LINE # 114
00BC         ?C0007:
00BC D0E0              POP     ACC
C51 COMPILER V9.00   I2C_SLAVE                                                             10/29/2013 11:04:50 PAGE 7   

00BE FF                MOV     R7,A
00BF D0E0              POP     ACC
00C1 FE                MOV     R6,A
00C2 D0E0              POP     ACC
00C4 FD                MOV     R5,A
00C5 D0E0              POP     ACC
00C7 FC                MOV     R4,A
00C8 D0E0              POP     ACC
00CA FB                MOV     R3,A
00CB D0E0              POP     ACC
00CD FA                MOV     R2,A
00CE D0E0              POP     ACC
00D0 F9                MOV     R1,A
00D1 D0E0              POP     ACC
00D3 F8                MOV     R0,A
00D4 D0D0              POP     PSW
00D6 D0A7              POP     DPCON
00D8 D082              POP     DPL
00DA D083              POP     DPH
00DC 05A7              INC     DPCON
00DE D082              POP     DPL
00E0 D083              POP     DPH
00E2 D0F0              POP     B
00E4 D0E0              POP     ACC
00E6 32                RETI    
             ; FUNCTION I2C_ISR (END)

             ; FUNCTION Timer0_ISR (BEGIN)
0000 C0E0              PUSH    ACC
0002 C083              PUSH    DPH
0004 C082              PUSH    DPL
0006 05A7              INC     DPCON
0008 C083              PUSH    DPH
000A C082              PUSH    DPL
000C C0A7              PUSH    DPCON
000E 75A700            MOV     DPCON,#00H
                                           ; SOURCE LINE # 116
                                           ; SOURCE LINE # 118
0011 C28D              CLR     TF0
                                           ; SOURCE LINE # 119
0013 758C00            MOV     TH0,#00H
                                           ; SOURCE LINE # 120
0016 758A00            MOV     TL0,#00H
                                           ; SOURCE LINE # 121
0019 900000      R     MOV     DPTR,#watch_timer
001C E0                MOVX    A,@DPTR
001D 14                DEC     A
001E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 123
001F E0                MOVX    A,@DPTR
0020 7007              JNZ     ?C0009
                                           ; SOURCE LINE # 124
                                           ; SOURCE LINE # 125
0022 D2EA              SETB    I2CRS
                                           ; SOURCE LINE # 126
0024 C2EA              CLR     I2CRS
                                           ; SOURCE LINE # 127
0026 741E              MOV     A,#01EH
0028 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 129
                                           ; SOURCE LINE # 131
0029         ?C0009:
C51 COMPILER V9.00   I2C_SLAVE                                                             10/29/2013 11:04:50 PAGE 8   

0029 D0A7              POP     DPCON
002B D082              POP     DPL
002D D083              POP     DPH
002F 05A7              INC     DPCON
0031 D082              POP     DPL
0033 D083              POP     DPH
0035 D0E0              POP     ACC
0037 32                RETI    
             ; FUNCTION Timer0_ISR (END)

             ; FUNCTION _CRC_Check (BEGIN)
                                           ; SOURCE LINE # 133
;---- Variable 'Count_pr' assigned to Register 'R5' ----
;---- Variable 'Spool_pr' assigned to Register 'R6/R7' ----
                                           ; SOURCE LINE # 134
                                           ; SOURCE LINE # 136
;---- Variable 'crc' assigned to Register 'R4' ----
0000 E4                CLR     A
0001 FC                MOV     R4,A
0002         ?C0010:
                                           ; SOURCE LINE # 138
0002 CB                XCH     A,R3
0003 ED                MOV     A,R5
0004 CB                XCH     A,R3
0005 1D                DEC     R5
0006 EB                MOV     A,R3
0007 6016              JZ      ?C0011
                                           ; SOURCE LINE # 139
0009 0F                INC     R7
000A EF                MOV     A,R7
000B CA                XCH     A,R2
000C EE                MOV     A,R6
000D CA                XCH     A,R2
000E 7001              JNZ     ?C0013
0010 0E                INC     R6
0011         ?C0013:
0011 14                DEC     A
0012 F582              MOV     DPL,A
0014 8A83              MOV     DPH,R2
0016 E0                MOVX    A,@DPTR
0017 6C                XRL     A,R4
0018 900000      R     MOV     DPTR,#Crc8Table
001B 93                MOVC    A,@A+DPTR
001C FC                MOV     R4,A
001D 80E3              SJMP    ?C0010
001F         ?C0011:
                                           ; SOURCE LINE # 141
001F CF                XCH     A,R7
0020 EC                MOV     A,R4
0021 CF                XCH     A,R7
                                           ; SOURCE LINE # 143
0022         ?C0012:
0022 22                RET     
             ; FUNCTION _CRC_Check (END)

C51 COMPILER V9.00   I2C_SLAVE                                                             10/29/2013 11:04:50 PAGE 9   

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


TCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0088H  1
TMOD . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0089H  1
TL0. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008AH  1
TH0. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008CH  1
SCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0098H  1
I2CDAT . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   009AH  1
I2CADD . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   009BH  1
P2 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A0H  1
IE . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A8H  1
IEIP2. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A9H  1
P3 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B0H  1
IP . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B8H  1
WDCON. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C0H  1
T2CON. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C8H  1
PSW. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D0H  1
ADCSTAT. . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D8H  1
I2CCON . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E8H  1
DCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E8H  1
SPICON . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00F8H  1
TF0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008DH  1
TR0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008CH  1
ET0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A9H  1
I2CRS. . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00EAH  1
I2CTX. . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00E9H  1
Channel. . . . . . . . . . . . . . . .  * TAG *  -----  STRUCT   -----  20
  I2C_CHNL . . . . . . . . . . . . . .  MEMBER   -----  UNION    0000H  11
  transfer . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   000BH  1
  DOL_buf. . . . . . . . . . . . . . .  MEMBER   -----  U_LONG   000CH  4
  frequency_buf. . . . . . . . . . . .  MEMBER   -----  U_INT    0010H  2
  mid_frequency_buf. . . . . . . . . .  MEMBER   -----  U_INT    0012H  2
channels . . . . . . . . . . . . . . .  EXTERN   XDATA  STRUCT   -----  20
I2C_Slave_Init . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
I2C_ISR. . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
_CRC_Check . . . . . . . . . . . . . .  STATIC   CODE   PROC     0000H  -----
  Spool_pr . . . . . . . . . . . . . .  * REG *  DATA   PTR      0006H  2
  Count_pr . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0005H  1
  crc. . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0004H  1
FL1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A0H  1
test_buf . . . . . . . . . . . . . . .  PUBLIC   XDATA  ARRAY    0000H  15
Crc8Table. . . . . . . . . . . . . . .  PUBLIC   CODE   ARRAY    0000H  256
req. . . . . . . . . . . . . . . . . .  PUBLIC   XDATA  U_CHAR   000FH  1
count. . . . . . . . . . . . . . . . .  PUBLIC   XDATA  U_CHAR   0010H  1
watch_timer. . . . . . . . . . . . . .  PUBLIC   XDATA  U_CHAR   0011H  1
Timer0_ISR . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    362    ----
   CONSTANT SIZE    =    256    ----
   XDATA SIZE       =     18    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
