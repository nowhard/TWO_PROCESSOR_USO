C51 COMPILER V9.00   CALIBRATE                                                             09/02/2014 11:13:18 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE CALIBRATE
OBJECT MODULE PLACED IN calibrate.obj
COMPILER INVOKED BY: C:\Program Files\Keil\C51\BIN\C51.EXE calibrate\calibrate.c LARGE OPTIMIZE(9,SPEED) BROWSE ORDER NO
                    -AREGS MODAB2 DEBUG OBJECTEXTEND PRINT(.\calibrate.lst) OBJECT(calibrate.obj)

line level    source

   1          #include "calibrate.h"
   2          #pragma OT(6,Speed)
   3          //------------------------------------------------------------
   4          unsigned long GetCalibrateVal(unsigned char channel_num,unsigned long ADC_Code)   //преобразование значени
             -я АЦП в калиброванное значение         ??? проверить && debug
   5          {
   6   1              if(ADC_Code==0)
   7   1                      return 0;
   8   1      
   9   1              return (unsigned long)(ADC_Code*channels[channel_num].calibrate.cal.K+channels[channel_num].calibrate.cal
             -.C);        
  10   1      }
  11          //------------------------------------------------------------
  12          void RestoreCalibrate(void)              //восстановление точек калибровки из EEPROM
  13          {
  14   1              unsigned char i=0;
  15   1              for(i=0;i<CHANNEL_NUMBER;i++)
  16   1              {
  17   2                      EEPROM_Read(&channels[i].calibrate.serialize,3,ADC_CALIBRATE_ADDR+i*3);
  18   2              }
  19   1      
  20   1              return;
  21   1      }
  22          //---------------------------------------------------------------
  23          void Calibrate(unsigned char channel_num,float K,float C) //общая функция калибровки
  24          {
  25   1                      channels[channel_num].calibrate.cal.K= K;
  26   1                      channels[channel_num].calibrate.cal.C= C;
  27   1                      EEPROM_Write(&channels[channel_num].calibrate.serialize,3,ADC_CALIBRATE_ADDR+channel_num*3);
  28   1                      return;
  29   1      }
  30          //---------------------------------------------------------------


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    296    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      15
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
