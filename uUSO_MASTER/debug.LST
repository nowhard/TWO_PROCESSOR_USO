C51 COMPILER V9.00   DEBUG                                                                 05/22/2015 09:20:43 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE DEBUG
OBJECT MODULE PLACED IN debug.OBJ
COMPILER INVOKED BY: C:\Program Files\Keil\C51\BIN\C51.EXE debug.c LARGE OPTIMIZE(6,SPEED) BROWSE ORDER NOAREGS DEBUG OB
                    -JECTEXTEND CODE SYMBOLS

line level    source

   1          #include <ADuC845.h>
   2          
   3          
   4          #include "timer3.h"
   5          #include "proto_uso/proto_uso.h"
   6          #include "preferences.h"
   7          #include "eeprom/eeprom.h"
   8          #include "timer1.h"
   9          #include "adc.h"
  10          #include "watchdog.h"
  11          #include "proto_uso/channels.h"
  12          //#include "frequency.h"
  13          
  14          #include "i2c.h"
  15          #include "ulongsort.h"
  16          
  17          #include "calibrate/calibrate.h"
  18          #include "pt/pt.h"
  19          
  20          
  21          
  22          extern unsigned char idata i2c_buffer[6];
  23          
  24          extern struct I2C_Channel xdata i2c_channels;
  25          extern struct pt pt_proto, pt_wdt;
  26          volatile struct pt pt_i2c_read, pt_freq_measure,pt_sort,pt_i2c_process;
  27          
  28          
  29          //-----------------------------------------
  30          void Set_Handlers(void);//установить обработчики событий
  31          PT_THREAD(I2C_RepeatRead(struct pt *pt));
  32           //---------------------------------------
  33          
  34          void main(void) //using 0
  35          {                          
  36   1              EA = 0;
  37   1              
  38   1              
  39   1              PLLCON&=PLLCON_VAL;//настройка частоты процессора
  40   1              
  41   1              RestoreCalibrate();
  42   1              
  43   1              ChannelsInit();//инициализаци€ настроек каналов
  44   1              Protocol_Init();        
  45   1              Timer1_Initialize(); //таймер шедулера 200√ц    
  46   1              ADC_Initialize();
  47   1              UART_Init();
  48   1              Frequency_Init();
*** WARNING C206 IN LINE 48 OF DEBUG.C: 'Frequency_Init': missing function-prototype
  49   1      
  50   1              WDT_Init(WDT_2000);//включить сторожевой таймер
  51   1              I2C_Init();
  52   1      
  53   1      
C51 COMPILER V9.00   DEBUG                                                                 05/22/2015 09:20:43 PAGE 2   

  54   1              
  55   1              PT_INIT(&pt_i2c_read);
  56   1              PT_INIT(&pt_freq_measure);
  57   1              PT_INIT(&pt_sort);
  58   1              PT_INIT(&pt_i2c_process);
  59   1      
  60   1              EA=1;
  61   1      
  62   1              i2c_buffer[0]=0x0;//сброс флага инициализации
  63   1      
  64   1              I2C_Repeat_Start_Read(I2C_ADDR,&i2c_buffer,1,i2c_channels.I2C_CHNL.i2c_buf,sizeof(i2c_channels));         //про
             -изводим первое чтение заранее
  65   1              while(1)
  66   1              {       
  67   2                      ProtoProcess(&pt_proto);
  68   2                      I2C_RepeatRead(&pt_i2c_read);
  69   2      //              Frequency_Measure_Process(&pt_freq_measure);    
  70   2                      ulongsort_process(&pt_sort);
  71   2                      I2C_Process(&pt_i2c_process);
  72   2                      WDT_Process(&pt_wdt);       
  73   2              }
  74   1      }
  75          //-----------------------------------------------------------------------------
  76          //#pragma OT(0,Speed)
  77           //---------------------------------
  78           PT_THREAD(I2C_RepeatRead(struct pt *pt))//поток чтени€ I2C
  79           {  
  80   1                wdt_count[I2C_RepeatRead_Proc].process_state=RUN;
  81   1                 
  82   1                PT_BEGIN(pt);
  83   3                
  84   3                while(1) 
  85   3                {
  86   4                              PT_DELAY(pt,15);
  87   4                              I2C_Repeat_Start_Read(I2C_ADDR,&i2c_buffer,1,i2c_channels.I2C_CHNL.i2c_buf,sizeof(i2c_channels));       //исп
             -равить сдвиг адресации
  88   4                              //WDT_Clear();
  89   4                              wdt_count[I2C_RepeatRead_Proc].count++;
  90   4                }
  91   3                PT_END(pt);
  92   1      
  93   1       }
  94          //-----------------------------------
  95          void Timer1_Interrupt(void) interrupt 3  //таймер шедулера
  96          {
  97   1      //---------------------------------------
  98   1              TH1     = TH1_VAL; ///200 Hz;
  99   1              TL1 = TL1_VAL;//
 100   1              pt_i2c_read.pt_time++;
 101   1      //      pt_freq_measure.pt_time++;
 102   1              pt_sort.pt_time++;
 103   1              pt_proto.pt_time++;
 104   1              pt_wdt.pt_time++;
 105   1              return; 
 106   1      }
C51 COMPILER V9.00   DEBUG                                                                 05/22/2015 09:20:43 PAGE 3   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION main (BEGIN)
                                           ; SOURCE LINE # 34
                                           ; SOURCE LINE # 35
                                           ; SOURCE LINE # 36
0000 C2AF              CLR     EA
                                           ; SOURCE LINE # 39
0002 53D7F9            ANL     PLLCON,#0F9H
                                           ; SOURCE LINE # 41
0005 120000      E     LCALL   RestoreCalibrate
                                           ; SOURCE LINE # 43
0008 120000      E     LCALL   ChannelsInit
                                           ; SOURCE LINE # 44
000B 120000      E     LCALL   Protocol_Init
                                           ; SOURCE LINE # 45
000E 120000      E     LCALL   Timer1_Initialize
                                           ; SOURCE LINE # 46
0011 120000      E     LCALL   ADC_Initialize
                                           ; SOURCE LINE # 47
0014 120000      E     LCALL   UART_Init
                                           ; SOURCE LINE # 48
0017 120000      E     LCALL   Frequency_Init
                                           ; SOURCE LINE # 50
001A 7F72              MOV     R7,#072H
001C 120000      E     LCALL   _WDT_Init
                                           ; SOURCE LINE # 51
001F 120000      E     LCALL   I2C_Init
                                           ; SOURCE LINE # 55
0022 E4                CLR     A
0023 900000      R     MOV     DPTR,#pt_i2c_read
0026 F0                MOVX    @DPTR,A
0027 A3                INC     DPTR
0028 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 56
0029 900000      R     MOV     DPTR,#pt_freq_measure
002C F0                MOVX    @DPTR,A
002D A3                INC     DPTR
002E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 57
002F 900000      R     MOV     DPTR,#pt_sort
0032 F0                MOVX    @DPTR,A
0033 A3                INC     DPTR
0034 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 58
0035 900000      R     MOV     DPTR,#pt_i2c_process
0038 F0                MOVX    @DPTR,A
0039 A3                INC     DPTR
003A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 60
003B D2AF              SETB    EA
                                           ; SOURCE LINE # 62
003D 7800        E     MOV     R0,#LOW i2c_buffer
003F F6                MOV     @R0,A
                                           ; SOURCE LINE # 64
0040 900000      E     MOV     DPTR,#?_I2C_Repeat_Start_Read?BYTE+04H
0043 04                INC     A
0044 F0                MOVX    @DPTR,A
0045 A3                INC     DPTR
0046 F0                MOVX    @DPTR,A
0047 A3                INC     DPTR
C51 COMPILER V9.00   DEBUG                                                                 05/22/2015 09:20:43 PAGE 4   

0048 7400        E     MOV     A,#HIGH i2c_channels
004A F0                MOVX    @DPTR,A
004B A3                INC     DPTR
004C 7400        E     MOV     A,#LOW i2c_channels
004E F0                MOVX    @DPTR,A
004F A3                INC     DPTR
0050 740B              MOV     A,#0BH
0052 F0                MOVX    @DPTR,A
0053 7B00              MOV     R3,#00H
0055 7A00        E     MOV     R2,#HIGH i2c_buffer
0057 7900        E     MOV     R1,#LOW i2c_buffer
0059 7F58              MOV     R7,#058H
005B 120000      E     LCALL   _I2C_Repeat_Start_Read
005E         ?C0001:
                                           ; SOURCE LINE # 65
                                           ; SOURCE LINE # 66
                                           ; SOURCE LINE # 67
005E 7B01              MOV     R3,#01H
0060 7A00        E     MOV     R2,#HIGH pt_proto
0062 7900        E     MOV     R1,#LOW pt_proto
0064 120000      E     LCALL   _ProtoProcess
                                           ; SOURCE LINE # 68
0067 7B01              MOV     R3,#01H
0069 7A00        R     MOV     R2,#HIGH pt_i2c_read
006B 7900        R     MOV     R1,#LOW pt_i2c_read
006D 120000      R     LCALL   _I2C_RepeatRead
                                           ; SOURCE LINE # 70
0070 7B01              MOV     R3,#01H
0072 7A00        R     MOV     R2,#HIGH pt_sort
0074 7900        R     MOV     R1,#LOW pt_sort
0076 120000      E     LCALL   _ulongsort_process
                                           ; SOURCE LINE # 71
0079 7B01              MOV     R3,#01H
007B 7A00        R     MOV     R2,#HIGH pt_i2c_process
007D 7900        R     MOV     R1,#LOW pt_i2c_process
007F 120000      E     LCALL   _I2C_Process
                                           ; SOURCE LINE # 72
0082 7B01              MOV     R3,#01H
0084 7A00        E     MOV     R2,#HIGH pt_wdt
0086 7900        E     MOV     R1,#LOW pt_wdt
0088 120000      E     LCALL   _WDT_Process
                                           ; SOURCE LINE # 73
008B 80D1              SJMP    ?C0001
008D 22                RET     
             ; FUNCTION main (END)

             ; FUNCTION _I2C_RepeatRead (BEGIN)
                                           ; SOURCE LINE # 78
0000 900000      R     MOV     DPTR,#pt
0003 EB                MOV     A,R3
0004 F0                MOVX    @DPTR,A
0005 A3                INC     DPTR
0006 EA                MOV     A,R2
0007 F0                MOVX    @DPTR,A
0008 A3                INC     DPTR
0009 E9                MOV     A,R1
000A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 79
                                           ; SOURCE LINE # 80
000B E4                CLR     A
000C 900000      E     MOV     DPTR,#wdt_count+09H
000F F0                MOVX    @DPTR,A
C51 COMPILER V9.00   DEBUG                                                                 05/22/2015 09:20:43 PAGE 5   

                                           ; SOURCE LINE # 82
0010 900000      R     MOV     DPTR,#PT_YIELD_FLAG
0013 04                INC     A
0014 F0                MOVX    @DPTR,A
0015 120000      E     LCALL   ?C?ILDPTR
0018 FF                MOV     R7,A
0019 AEF0              MOV     R6,B
001B E5F0              MOV     A,B
001D 7076              JNZ     ?C0004
001F EF                MOV     A,R7
0020 24AA              ADD     A,#0AAH
0022 601F              JZ      ?C0011
0024 2456              ADD     A,#056H
0026 706D              JNZ     ?C0004
0028         ?C0006:
                                           ; SOURCE LINE # 84
                                           ; SOURCE LINE # 85
                                           ; SOURCE LINE # 86
0028 900000      R     MOV     DPTR,#pt
002B E0                MOVX    A,@DPTR
002C FB                MOV     R3,A
002D A3                INC     DPTR
002E E0                MOVX    A,@DPTR
002F FA                MOV     R2,A
0030 A3                INC     DPTR
0031 E0                MOVX    A,@DPTR
0032 F9                MOV     R1,A
0033 900002            MOV     DPTR,#02H
0036 E4                CLR     A
0037 F5F0              MOV     B,A
0039 120000      E     LCALL   ?C?ISTOPTR
003C E4                CLR     A
003D 75F056            MOV     B,#056H
0040 120000      E     LCALL   ?C?ISTPTR
0043         ?C0011:
0043 900000      R     MOV     DPTR,#pt
0046 E0                MOVX    A,@DPTR
0047 FB                MOV     R3,A
0048 A3                INC     DPTR
0049 E0                MOVX    A,@DPTR
004A FA                MOV     R2,A
004B A3                INC     DPTR
004C E0                MOVX    A,@DPTR
004D F9                MOV     R1,A
004E 900002            MOV     DPTR,#02H
0051 120000      E     LCALL   ?C?ILDOPTR
0054 C3                CLR     C
0055 940F              SUBB    A,#0FH
0057 E5F0              MOV     A,B
0059 9400              SUBB    A,#00H
005B 4003              JC      ?C0013
005D D3                SETB    C
005E 8001              SJMP    ?C0014
0060         ?C0013:
0060 C3                CLR     C
0061         ?C0014:
0061 4003              JC      ?C0009
0063 7F00              MOV     R7,#00H
0065 22                RET     
0066         ?C0009:
                                           ; SOURCE LINE # 87
0066 900000      E     MOV     DPTR,#?_I2C_Repeat_Start_Read?BYTE+04H
C51 COMPILER V9.00   DEBUG                                                                 05/22/2015 09:20:43 PAGE 6   

0069 7401              MOV     A,#01H
006B F0                MOVX    @DPTR,A
006C A3                INC     DPTR
006D F0                MOVX    @DPTR,A
006E A3                INC     DPTR
006F 7400        E     MOV     A,#HIGH i2c_channels
0071 F0                MOVX    @DPTR,A
0072 A3                INC     DPTR
0073 7400        E     MOV     A,#LOW i2c_channels
0075 F0                MOVX    @DPTR,A
0076 A3                INC     DPTR
0077 740B              MOV     A,#0BH
0079 F0                MOVX    @DPTR,A
007A 7B00              MOV     R3,#00H
007C 7A00        E     MOV     R2,#HIGH i2c_buffer
007E 7900        E     MOV     R1,#LOW i2c_buffer
0080 7F58              MOV     R7,#058H
0082 120000      E     LCALL   _I2C_Repeat_Start_Read
                                           ; SOURCE LINE # 89
0085 900000      E     MOV     DPTR,#wdt_count+0BH
0088 E0                MOVX    A,@DPTR
0089 04                INC     A
008A F0                MOVX    @DPTR,A
008B 7006              JNZ     ?C0017
008D 900000      E     MOV     DPTR,#wdt_count+0AH
0090 E0                MOVX    A,@DPTR
0091 04                INC     A
0092 F0                MOVX    @DPTR,A
0093         ?C0017:
                                           ; SOURCE LINE # 90
0093 8093              SJMP    ?C0006
                                           ; SOURCE LINE # 91
0095         ?C0004:
0095 E4                CLR     A
0096 900000      R     MOV     DPTR,#PT_YIELD_FLAG
0099 F0                MOVX    @DPTR,A
009A 900000      R     MOV     DPTR,#pt
009D E0                MOVX    A,@DPTR
009E FB                MOV     R3,A
009F A3                INC     DPTR
00A0 E0                MOVX    A,@DPTR
00A1 FA                MOV     R2,A
00A2 A3                INC     DPTR
00A3 E0                MOVX    A,@DPTR
00A4 F9                MOV     R1,A
00A5 E4                CLR     A
00A6 F5F0              MOV     B,A
00A8 120000      E     LCALL   ?C?ISTPTR
00AB 7F03              MOV     R7,#03H
                                           ; SOURCE LINE # 93
00AD         ?C0015:
00AD 22                RET     
             ; FUNCTION _I2C_RepeatRead (END)

             ; FUNCTION Timer1_Interrupt (BEGIN)
0000 C0E0              PUSH    ACC
0002 C083              PUSH    DPH
0004 C082              PUSH    DPL
                                           ; SOURCE LINE # 95
                                           ; SOURCE LINE # 98
0006 758D8A            MOV     TH1,#08AH
                                           ; SOURCE LINE # 99
C51 COMPILER V9.00   DEBUG                                                                 05/22/2015 09:20:43 PAGE 7   

0009 758BD0            MOV     TL1,#0D0H
                                           ; SOURCE LINE # 100
000C 900000      R     MOV     DPTR,#pt_i2c_read+03H
000F E0                MOVX    A,@DPTR
0010 04                INC     A
0011 F0                MOVX    @DPTR,A
0012 7006              JNZ     ?C0018
0014 900000      R     MOV     DPTR,#pt_i2c_read+02H
0017 E0                MOVX    A,@DPTR
0018 04                INC     A
0019 F0                MOVX    @DPTR,A
001A         ?C0018:
                                           ; SOURCE LINE # 102
001A 900000      R     MOV     DPTR,#pt_sort+03H
001D E0                MOVX    A,@DPTR
001E 04                INC     A
001F F0                MOVX    @DPTR,A
0020 7006              JNZ     ?C0019
0022 900000      R     MOV     DPTR,#pt_sort+02H
0025 E0                MOVX    A,@DPTR
0026 04                INC     A
0027 F0                MOVX    @DPTR,A
0028         ?C0019:
                                           ; SOURCE LINE # 103
0028 900000      E     MOV     DPTR,#pt_proto+03H
002B E0                MOVX    A,@DPTR
002C 04                INC     A
002D F0                MOVX    @DPTR,A
002E 7006              JNZ     ?C0020
0030 900000      E     MOV     DPTR,#pt_proto+02H
0033 E0                MOVX    A,@DPTR
0034 04                INC     A
0035 F0                MOVX    @DPTR,A
0036         ?C0020:
                                           ; SOURCE LINE # 104
0036 900000      E     MOV     DPTR,#pt_wdt+03H
0039 E0                MOVX    A,@DPTR
003A 04                INC     A
003B F0                MOVX    @DPTR,A
003C 7006              JNZ     ?C0021
003E 900000      E     MOV     DPTR,#pt_wdt+02H
0041 E0                MOVX    A,@DPTR
0042 04                INC     A
0043 F0                MOVX    @DPTR,A
0044         ?C0021:
                                           ; SOURCE LINE # 106
0044         ?C0016:
0044 D082              POP     DPL
0046 D083              POP     DPH
0048 D0E0              POP     ACC
004A 32                RETI    
             ; FUNCTION Timer1_Interrupt (END)

C51 COMPILER V9.00   DEBUG                                                                 05/22/2015 09:20:43 PAGE 8   

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


TCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0088H  1
TL1. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008BH  1
TH1. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008DH  1
SCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0098H  1
P2 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A0H  1
IE . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A8H  1
P3 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B0H  1
IP . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B8H  1
WDCON. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C0H  1
T2CON. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C8H  1
PSW. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D0H  1
PLLCON . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D7H  1
ADCSTAT. . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D8H  1
I2CCON . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E8H  1
DCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E8H  1
SPICON . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00F8H  1
EA . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AFH  1
UART_Init. . . . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
CHNL_ADC_0 . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CHNL_ADC_1 . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CHNL_ADC_2 . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CHNL_ADC_3 . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CHNL_FREQ_COUNT_T_0. . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CHNL_FREQ_COUNT_T_1. . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
Channel. . . . . . . . . . . . . . . .  * TAG *  -----  STRUCT   -----  25
  number . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  settings . . . . . . . . . . . . . .  MEMBER   -----  UNION    0001H  4
  channel_data . . . . . . . . . . . .  MEMBER   -----  U_LONG   0005H  4
  channel_data_calibrate . . . . . . .  MEMBER   -----  U_LONG   0009H  4
  calibrate. . . . . . . . . . . . . .  MEMBER   -----  UNION    000DH  12
ChannelsInit . . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
lc_t . . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_INT    -----  2
pt . . . . . . . . . . . . . . . . . .  * TAG *  -----  STRUCT   -----  4
  lc . . . . . . . . . . . . . . . . .  MEMBER   -----  U_INT    0000H  2
  pt_time. . . . . . . . . . . . . . .  MEMBER   -----  U_INT    0002H  2
RESET. . . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
SET. . . . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
RestoreCalibrate . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
size_t . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_INT    -----  2
_ulongsort_process . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
ADC_Channels . . . . . . . . . . . . .  * TAG *  -----  STRUCT   -----  38
  ADC_BUF_UN . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0000H  32
  adc_buf_counter. . . . . . . . . . .  MEMBER   -----  U_CHAR   0020H  1
  ADC_SF . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0021H  1
  ADC_GAIN . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0022H  1
  buffered . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0023H  1
  unipolar . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0024H  1
  new_measuring. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0025H  1
ADC_Initialize . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
PROTO_TYPE_NEW . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
PROTO_TYPE_OLD . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
Protocol_Init. . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
_ProtoProcess. . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
Timer1_Initialize. . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
Proto_Proc . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
Sort_Proc. . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
Watch_Proc . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
C51 COMPILER V9.00   DEBUG                                                                 05/22/2015 09:20:43 PAGE 9   

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


I2C_RepeatRead_Proc. . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
Frequency_Measure_Proc . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
I2C_Proc . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
RUN. . . . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
IDLE . . . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
watchdog . . . . . . . . . . . . . . .  * TAG *  -----  STRUCT   -----  3
  process_state. . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  count. . . . . . . . . . . . . . . .  MEMBER   -----  U_INT    0001H  2
wdt_count. . . . . . . . . . . . . . .  EXTERN   XDATA  ARRAY    -----  -----
_WDT_Init. . . . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
_WDT_Process . . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
I2C_Channel. . . . . . . . . . . . . .  * TAG *  -----  STRUCT   -----  11
  I2C_CHNL . . . . . . . . . . . . . .  MEMBER   -----  UNION    0000H  11
I2C_Init . . . . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
_I2C_Process . . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
_I2C_Repeat_Start_Read . . . . . . . .  EXTERN   CODE   PROC     -----  -----
i2c_buffer . . . . . . . . . . . . . .  EXTERN   IDATA  ARRAY    -----  6
i2c_channels . . . . . . . . . . . . .  EXTERN   XDATA  STRUCT   -----  11
pt_proto . . . . . . . . . . . . . . .  EXTERN   XDATA  STRUCT   -----  4
pt_wdt . . . . . . . . . . . . . . . .  EXTERN   XDATA  STRUCT   -----  4
pt_i2c_read. . . . . . . . . . . . . .  PUBLIC   XDATA  STRUCT   0000H  4
pt_freq_measure. . . . . . . . . . . .  PUBLIC   XDATA  STRUCT   0004H  4
pt_sort. . . . . . . . . . . . . . . .  PUBLIC   XDATA  STRUCT   0008H  4
pt_i2c_process . . . . . . . . . . . .  PUBLIC   XDATA  STRUCT   000CH  4
_I2C_RepeatRead. . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  pt . . . . . . . . . . . . . . . . .  AUTO     XDATA  PTR      0000H  3
  PT_YIELD_FLAG. . . . . . . . . . . .  AUTO     XDATA  CHAR     0003H  1
main . . . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
Frequency_Init . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
Timer1_Interrupt . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    391    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     16       4
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
