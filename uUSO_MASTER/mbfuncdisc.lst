C51 COMPILER V9.00   MBFUNCDISC                                                            06/19/2014 16:55:31 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE MBFUNCDISC
OBJECT MODULE PLACED IN mbfuncdisc.obj
COMPILER INVOKED BY: C:\Program Files\Keil\C51\BIN\C51.EXE modbus\functions\mbfuncdisc.c LARGE OPTIMIZE(0,SPEED) BROWSE 
                    -MODAB2 INCDIR(.\modbus\include;.\modbus;.\port;.\modbus\ascii;.\modbus\rtu;..\uUSO_MASTER) DEBUG OBJECTEXTEND CODE SYMBO
                    -LS PRINT(.\mbfuncdisc.lst) OBJECT(mbfuncdisc.obj)

line level    source

   1           /*
   2            * FreeRTOS Modbus Libary: A Modbus serial implementation for FreeRTOS
   3            * Copyright (C) 2006 Christian Walter <wolti@sil.at>
   4            *
   5            * This library is free software; you can redistribute it and/or
   6            * modify it under the terms of the GNU Lesser General Public
   7            * License as published by the Free Software Foundation; either
   8            * version 2.1 of the License, or (at your option) any later version.
   9            *
  10            * This library is distributed in the hope that it will be useful,
  11            * but WITHOUT ANY WARRANTY; without even the implied warranty of
  12            * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  13            * Lesser General Public License for more details.
  14            *
  15            * You should have received a copy of the GNU Lesser General Public
  16            * License along with this library; if not, write to the Free Software
  17            * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
  18            */
  19          
  20          
  21          
  22          /* ----------------------- System includes ----------------------------------*/
  23          #include "stdlib.h"
  24          #include "string.h"
  25          
  26          /* ----------------------- Platform includes --------------------------------*/
  27          #include "port.h"
  28          
  29          /* ----------------------- Modbus includes ----------------------------------*/
  30          #include "mb.h"
*** WARNING C258 IN LINE 41 OF .\MODBUS\RTU\MBRTU.H: 'pucFrame': mspace on parameter ignored
*** WARNING C258 IN LINE 41 OF .\MODBUS\RTU\MBRTU.H: 'pusLength': mspace on parameter ignored
  31          #include "mbframe.h"
  32          #include "mbproto.h"
  33          #include "mbconfig.h"
  34          
  35          /* ----------------------- Defines ------------------------------------------*/
  36          #define MB_PDU_FUNC_READ_ADDR_OFF           ( MB_PDU_DATA_OFF )
  37          #define MB_PDU_FUNC_READ_DISCCNT_OFF        ( MB_PDU_DATA_OFF + 2 )
  38          #define MB_PDU_FUNC_READ_SIZE               ( 4 )
  39          #define MB_PDU_FUNC_READ_DISCCNT_MAX        ( 0x07D0 )
  40          
  41          /* ----------------------- Static functions ---------------------------------*/
  42          eMBException    prveMBError2Exception( eMBErrorCode eErrorCode );
  43          
  44          /* ----------------------- Start implementation -----------------------------*/
  45          
  46          #if MB_FUNC_READ_COILS_ENABLED > 0
              
              eMBException
              eMBFuncReadDiscreteInputs( UCHAR * pucFrame, USHORT * usLen )
              {
                  USHORT          usRegAddress;
C51 COMPILER V9.00   MBFUNCDISC                                                            06/19/2014 16:55:31 PAGE 2   

                  USHORT          usDiscreteCnt;
                  UCHAR           ucNBytes;
                  UCHAR          *pucFrameCur;
              
                  eMBException    eStatus = MB_EX_NONE;
                  eMBErrorCode    eRegStatus;
              
                  if( *usLen == ( MB_PDU_FUNC_READ_SIZE + MB_PDU_SIZE_MIN ) )
                  {
                      usRegAddress = ( USHORT )( pucFrame[MB_PDU_FUNC_READ_ADDR_OFF] << 8 );
                      usRegAddress |= ( USHORT )( pucFrame[MB_PDU_FUNC_READ_ADDR_OFF + 1] );
                      usRegAddress++;
              
                      usDiscreteCnt = ( USHORT )( pucFrame[MB_PDU_FUNC_READ_DISCCNT_OFF] << 8 );
                      usDiscreteCnt |= ( USHORT )( pucFrame[MB_PDU_FUNC_READ_DISCCNT_OFF + 1] );
              
                      /* Check if the number of registers to read is valid. If not
                       * return Modbus illegal data value exception. 
                       */
                      if( ( usDiscreteCnt >= 1 ) &&
                          ( usDiscreteCnt < MB_PDU_FUNC_READ_DISCCNT_MAX ) )
                      {
                          /* Set the current PDU data pointer to the beginning. */
                          pucFrameCur = &pucFrame[MB_PDU_FUNC_OFF];
                          *usLen = MB_PDU_FUNC_OFF;
              
                          /* First byte contains the function code. */
                          *pucFrameCur++ = MB_FUNC_READ_DISCRETE_INPUTS;
                          *usLen += 1;
              
                          /* Test if the quantity of coils is a multiple of 8. If not last
                           * byte is only partially field with unused coils set to zero. */
                          if( ( usDiscreteCnt & 0x0007 ) != 0 )
                          {
                              ucNBytes = ( UCHAR ) ( usDiscreteCnt / 8 + 1 );
                          }
                          else
                          {
                              ucNBytes = ( UCHAR ) ( usDiscreteCnt / 8 );
                          }
                          *pucFrameCur++ = ucNBytes;
                          *usLen += 1;
              
                          eRegStatus =
                              eMBRegDiscreteCB( pucFrameCur, usRegAddress, usDiscreteCnt );
              
                          /* If an error occured convert it into a Modbus exception. */
                          if( eRegStatus != MB_ENOERR )
                          {
                              eStatus = prveMBError2Exception( eRegStatus );
                          }
                          else
                          {
                              /* The response contains the function code, the starting address
                               * and the quantity of registers. We reuse the old values in the 
                               * buffer because they are still valid. */
                              *usLen += ucNBytes;;
                          }
                      }
                      else
                      {
                          eStatus = MB_EX_ILLEGAL_DATA_VALUE;
C51 COMPILER V9.00   MBFUNCDISC                                                            06/19/2014 16:55:31 PAGE 3   

                      }
                  }
                  else
                  {
                      /* Can't be a valid read coil register request because the length
                       * is incorrect. */
                      eStatus = MB_EX_ILLEGAL_DATA_VALUE;
                  }
                  return eStatus;
              }
              
              #endif
C51 COMPILER V9.00   MBFUNCDISC                                                            06/19/2014 16:55:31 PAGE 4   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


C51 COMPILER V9.00   MBFUNCDISC                                                            06/19/2014 16:55:31 PAGE 5   

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


eMBErrorCode . . . . . . . . . . . . .  TYPEDEF  -----  U_CHAR   -----  1
P2 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A0H  1
P3 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B0H  1
EV_FRAME_SENT. . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
ULONG. . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_LONG   -----  4
ADCSTAT. . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D8H  1
pxMBFunctionHandler. . . . . . . . . .  TYPEDEF  -----  PTR      -----  3
MB_PAR_ODD . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
IE . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A8H  1
pvMBFrameStop. . . . . . . . . . . . .  TYPEDEF  -----  PTR      -----  3
MB_EX_SLAVE_BUSY . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
EV_EXECUTE . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
SHORT. . . . . . . . . . . . . . . . .  TYPEDEF  -----  INT      -----  2
size_t . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_INT    -----  2
EV_FRAME_RECEIVED. . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
MB_EX_ACKNOWLEDGE. . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
xMBFunctionHandler . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  4
  ucFunctionCode . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  pxHandler. . . . . . . . . . . . . .  MEMBER   -----  PTR      0001H  3
IP . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B8H  1
MB_EX_GATEWAY_PATH_FAILED. . . . . . .  E_CONST  -----  U_CHAR   -----  1
MB_EILLSTATE . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
peMBFrameReceive . . . . . . . . . . .  TYPEDEF  -----  PTR      -----  3
MB_EX_NONE . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CHAR . . . . . . . . . . . . . . . . .  TYPEDEF  -----  CHAR     -----  1
eMBEventType . . . . . . . . . . . . .  TYPEDEF  -----  U_CHAR   -----  1
I2CCON . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E8H  1
MB_ETIMEDOUT . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
DCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E8H  1
eMBException . . . . . . . . . . . . .  TYPEDEF  -----  U_CHAR   -----  1
BOOL . . . . . . . . . . . . . . . . .  TYPEDEF  -----  CHAR     -----  1
MB_EINVAL. . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
LONG . . . . . . . . . . . . . . . . .  TYPEDEF  -----  LONG     -----  4
MB_ENOREG. . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
SCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0098H  1
MB_EX_ILLEGAL_FUNCTION . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
TCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0088H  1
MB_REG_WRITE . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
MB_ENOERR. . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
MB_ENORES. . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
MB_EX_ILLEGAL_DATA_VALUE . . . . . . .  E_CONST  -----  U_CHAR   -----  1
eMBRegisterMode. . . . . . . . . . . .  TYPEDEF  -----  U_CHAR   -----  1
MB_REG_READ. . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
MB_EIO . . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
SPICON . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00F8H  1
MB_EX_ILLEGAL_DATA_ADDRESS . . . . . .  E_CONST  -----  U_CHAR   -----  1
MB_TCP . . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
MB_ASCII . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
MB_EX_GATEWAY_TGT_FAILED . . . . . . .  E_CONST  -----  U_CHAR   -----  1
pvMBFrameClose . . . . . . . . . . . .  TYPEDEF  -----  PTR      -----  3
peMBFrameSend. . . . . . . . . . . . .  TYPEDEF  -----  PTR      -----  3
MB_PAR_EVEN. . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
MB_PAR_NONE. . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
MB_EPORTERR. . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
USHORT . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_INT    -----  2
T2CON. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C8H  1
MB_EX_SLAVE_DEVICE_FAILURE . . . . . .  E_CONST  -----  U_CHAR   -----  1
C51 COMPILER V9.00   MBFUNCDISC                                                            06/19/2014 16:55:31 PAGE 6   

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


MB_RTU . . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
wchar_t. . . . . . . . . . . . . . . .  TYPEDEF  -----  CHAR     -----  1
MB_EX_MEMORY_PARITY_ERROR. . . . . . .  E_CONST  -----  U_CHAR   -----  1
eMBParity. . . . . . . . . . . . . . .  TYPEDEF  -----  U_CHAR   -----  1
EV_READY . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
UCHAR. . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_CHAR   -----  1
pvMBFrameStart . . . . . . . . . . . .  TYPEDEF  -----  PTR      -----  3
PSW. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D0H  1
eMBMode. . . . . . . . . . . . . . . .  TYPEDEF  -----  U_CHAR   -----  1
WDCON. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C0H  1


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   ----    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  2 WARNING(S),  0 ERROR(S)
