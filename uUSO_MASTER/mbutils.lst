C51 COMPILER V9.00   MBUTILS                                                               06/19/2014 16:55:32 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE MBUTILS
OBJECT MODULE PLACED IN mbutils.obj
COMPILER INVOKED BY: C:\Program Files\Keil\C51\BIN\C51.EXE modbus\functions\mbutils.c LARGE OPTIMIZE(0,SPEED) BROWSE MOD
                    -AB2 INCDIR(.\modbus\include;.\modbus;.\port;.\modbus\ascii;.\modbus\rtu;..\uUSO_MASTER) DEBUG OBJECTEXTEND CODE SYMBOLS 
                    -PRINT(.\mbutils.lst) OBJECT(mbutils.obj)

line level    source

   1          /* 
   2           * FreeModbus Libary: A portable Modbus implementation for Modbus ASCII/RTU.
   3           * Copyright (c) 2006 Christian Walter <wolti@sil.at>
   4           * All rights reserved.
   5           *
   6           * Redistribution and use in source and binary forms, with or without
   7           * modification, are permitted provided that the following conditions
   8           * are met:
   9           * 1. Redistributions of source code must retain the above copyright
  10           *    notice, this list of conditions and the following disclaimer.
  11           * 2. Redistributions in binary form must reproduce the above copyright
  12           *    notice, this list of conditions and the following disclaimer in the
  13           *    documentation and/or other materials provided with the distribution.
  14           * 3. The name of the author may not be used to endorse or promote products
  15           *    derived from this software without specific prior written permission.
  16           *
  17           * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
  18           * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
  19           * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
  20           * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
  21           * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
  22           * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
  23           * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
  24           * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  25           * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  26           * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  27           *
  28           * File: $Id: mbutils.c,v 1.6 2007/02/18 23:49:07 wolti Exp $
  29           */
  30          
  31          /* ----------------------- System includes ----------------------------------*/
  32          #include "stdlib.h"
  33          #include "string.h"
  34          
  35          /* ----------------------- Platform includes --------------------------------*/
  36          #include "port.h"
  37          
  38          /* ----------------------- Modbus includes ----------------------------------*/
  39          #include "mb.h"
*** WARNING C258 IN LINE 41 OF .\MODBUS\RTU\MBRTU.H: 'pucFrame': mspace on parameter ignored
*** WARNING C258 IN LINE 41 OF .\MODBUS\RTU\MBRTU.H: 'pusLength': mspace on parameter ignored
  40          #include "mbproto.h"
  41          
  42          /* ----------------------- Defines ------------------------------------------*/
  43          #define BITS_UCHAR      8U
  44          
  45          /* ----------------------- Start implementation -----------------------------*/
  46          void
  47          xMBUtilSetBits( UCHAR * ucByteBuf, USHORT usBitOffset, UCHAR ucNBits,
  48                          UCHAR ucValue )
  49          {
  50   1          USHORT          usWordBuf;
  51   1          USHORT          usMask;
C51 COMPILER V9.00   MBUTILS                                                               06/19/2014 16:55:32 PAGE 2   

  52   1          USHORT          usByteOffset;
  53   1          USHORT          usNPreBits;
  54   1          USHORT          usValue = ucValue;
  55   1      
  56   1          assert( ucNBits <= 8 );
  57   1          assert( ( size_t )BITS_UCHAR == sizeof( UCHAR ) * 8 );
  58   1      
  59   1          /* Calculate byte offset for first byte containing the bit values starting
  60   1           * at usBitOffset. */
  61   1          usByteOffset = ( USHORT )( ( usBitOffset ) / BITS_UCHAR );
  62   1      
  63   1          /* How many bits precede our bits to set. */
  64   1          usNPreBits = ( USHORT )( usBitOffset - usByteOffset * BITS_UCHAR );
  65   1      
  66   1          /* Move bit field into position over bits to set */
  67   1          usValue <<= usNPreBits;
  68   1      
  69   1          /* Prepare a mask for setting the new bits. */
  70   1          usMask = ( USHORT )( ( 1 << ( USHORT ) ucNBits ) - 1 );
  71   1          usMask <<= usBitOffset - usByteOffset * BITS_UCHAR;
  72   1      
  73   1          /* copy bits into temporary storage. */
  74   1          usWordBuf = ucByteBuf[usByteOffset];
  75   1          usWordBuf |= ucByteBuf[usByteOffset + 1] << BITS_UCHAR;
  76   1      
  77   1          /* Zero out bit field bits and then or value bits into them. */
  78   1          usWordBuf = ( USHORT )( ( usWordBuf & ( ~usMask ) ) | usValue );
  79   1      
  80   1          /* move bits back into storage */
  81   1          ucByteBuf[usByteOffset] = ( UCHAR )( usWordBuf & 0xFF );
  82   1          ucByteBuf[usByteOffset + 1] = ( UCHAR )( usWordBuf >> BITS_UCHAR );
  83   1      }
  84          
  85          UCHAR
  86          xMBUtilGetBits( UCHAR * ucByteBuf, USHORT usBitOffset, UCHAR ucNBits )
  87          {
  88   1          USHORT          usWordBuf;
  89   1          USHORT          usMask;
  90   1          USHORT          usByteOffset;
  91   1          USHORT          usNPreBits;
  92   1      
  93   1          /* Calculate byte offset for first byte containing the bit values starting
  94   1           * at usBitOffset. */
  95   1          usByteOffset = ( USHORT )( ( usBitOffset ) / BITS_UCHAR );
  96   1      
  97   1          /* How many bits precede our bits to set. */
  98   1          usNPreBits = ( USHORT )( usBitOffset - usByteOffset * BITS_UCHAR );
  99   1      
 100   1          /* Prepare a mask for setting the new bits. */
 101   1          usMask = ( USHORT )( ( 1 << ( USHORT ) ucNBits ) - 1 );
 102   1      
 103   1          /* copy bits into temporary storage. */
 104   1          usWordBuf = ucByteBuf[usByteOffset];
 105   1          usWordBuf |= ucByteBuf[usByteOffset + 1] << BITS_UCHAR;
 106   1      
 107   1          /* throw away unneeded bits. */
 108   1          usWordBuf >>= usNPreBits;
 109   1      
 110   1          /* mask away bits above the requested bitfield. */
 111   1          usWordBuf &= usMask;
 112   1      
 113   1          return ( UCHAR ) usWordBuf;
C51 COMPILER V9.00   MBUTILS                                                               06/19/2014 16:55:32 PAGE 3   

 114   1      }
 115          
 116          eMBException
 117          prveMBError2Exception( eMBErrorCode eErrorCode )
 118          {
 119   1          eMBException    eStatus;
 120   1      
 121   1          switch ( eErrorCode )
 122   1          {
 123   2              case MB_ENOERR:
 124   2                  eStatus = MB_EX_NONE;
 125   2                  break;
 126   2      
 127   2              case MB_ENOREG:
 128   2                  eStatus = MB_EX_ILLEGAL_DATA_ADDRESS;
 129   2                  break;
 130   2      
 131   2              case MB_ETIMEDOUT:
 132   2                  eStatus = MB_EX_SLAVE_BUSY;
 133   2                  break;
 134   2      
 135   2              default:
 136   2                  eStatus = MB_EX_SLAVE_DEVICE_FAILURE;
 137   2                  break;
 138   2          }
 139   1      
 140   1          return eStatus;
 141   1      }
C51 COMPILER V9.00   MBUTILS                                                               06/19/2014 16:55:32 PAGE 4   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION _xMBUtilSetBits (BEGIN)
                                           ; SOURCE LINE # 47
0000 900000      R     MOV     DPTR,#ucByteBuf
0003 EB                MOV     A,R3
0004 F0                MOVX    @DPTR,A
0005 A3                INC     DPTR
0006 EA                MOV     A,R2
0007 F0                MOVX    @DPTR,A
0008 A3                INC     DPTR
0009 E9                MOV     A,R1
000A F0                MOVX    @DPTR,A
000B 900000      R     MOV     DPTR,#usBitOffset
000E EC                MOV     A,R4
000F F0                MOVX    @DPTR,A
0010 A3                INC     DPTR
0011 ED                MOV     A,R5
0012 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 49
                                           ; SOURCE LINE # 54
0013 900000      R     MOV     DPTR,#ucValue
0016 E0                MOVX    A,@DPTR
0017 FF                MOV     R7,A
0018 7E00              MOV     R6,#00H
001A 900000      R     MOV     DPTR,#usValue
001D EE                MOV     A,R6
001E F0                MOVX    @DPTR,A
001F A3                INC     DPTR
0020 EF                MOV     A,R7
0021 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 61
0022 900000      R     MOV     DPTR,#usBitOffset
0025 E0                MOVX    A,@DPTR
0026 FE                MOV     R6,A
0027 A3                INC     DPTR
0028 E0                MOVX    A,@DPTR
0029 FF                MOV     R7,A
002A EF                MOV     A,R7
002B 7803              MOV     R0,#03H
002D         ?C0009:
002D CE                XCH     A,R6
002E C3                CLR     C
002F 13                RRC     A
0030 CE                XCH     A,R6
0031 13                RRC     A
0032 D8F9              DJNZ    R0,?C0009
0034 FF                MOV     R7,A
0035 900000      R     MOV     DPTR,#usByteOffset
0038 EE                MOV     A,R6
0039 F0                MOVX    @DPTR,A
003A A3                INC     DPTR
003B EF                MOV     A,R7
003C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 64
003D 900000      R     MOV     DPTR,#usByteOffset
0040 E0                MOVX    A,@DPTR
0041 FE                MOV     R6,A
0042 A3                INC     DPTR
0043 E0                MOVX    A,@DPTR
0044 FF                MOV     R7,A
C51 COMPILER V9.00   MBUTILS                                                               06/19/2014 16:55:32 PAGE 5   

0045 EF                MOV     A,R7
0046 7803              MOV     R0,#03H
0048         ?C0010:
0048 C3                CLR     C
0049 33                RLC     A
004A CE                XCH     A,R6
004B 33                RLC     A
004C CE                XCH     A,R6
004D D8F9              DJNZ    R0,?C0010
004F FF                MOV     R7,A
0050 900000      R     MOV     DPTR,#usBitOffset
0053 E0                MOVX    A,@DPTR
0054 FC                MOV     R4,A
0055 A3                INC     DPTR
0056 E0                MOVX    A,@DPTR
0057 FD                MOV     R5,A
0058 C3                CLR     C
0059 ED                MOV     A,R5
005A 9F                SUBB    A,R7
005B FF                MOV     R7,A
005C EC                MOV     A,R4
005D 9E                SUBB    A,R6
005E FE                MOV     R6,A
005F 900000      R     MOV     DPTR,#usNPreBits
0062 EE                MOV     A,R6
0063 F0                MOVX    @DPTR,A
0064 A3                INC     DPTR
0065 EF                MOV     A,R7
0066 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 67
0067 900000      R     MOV     DPTR,#usValue
006A E0                MOVX    A,@DPTR
006B FE                MOV     R6,A
006C A3                INC     DPTR
006D E0                MOVX    A,@DPTR
006E FF                MOV     R7,A
006F 900000      R     MOV     DPTR,#usNPreBits
0072 E0                MOVX    A,@DPTR
0073 FC                MOV     R4,A
0074 A3                INC     DPTR
0075 E0                MOVX    A,@DPTR
0076 FD                MOV     R5,A
0077 EF                MOV     A,R7
0078 A805              MOV     R0,AR5
007A 08                INC     R0
007B 8005              SJMP    ?C0012
007D         ?C0011:
007D C3                CLR     C
007E 33                RLC     A
007F CE                XCH     A,R6
0080 33                RLC     A
0081 CE                XCH     A,R6
0082         ?C0012:
0082 D8F9              DJNZ    R0,?C0011
0084 FF                MOV     R7,A
0085 900000      R     MOV     DPTR,#usValue
0088 EE                MOV     A,R6
0089 F0                MOVX    @DPTR,A
008A A3                INC     DPTR
008B EF                MOV     A,R7
008C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 70
C51 COMPILER V9.00   MBUTILS                                                               06/19/2014 16:55:32 PAGE 6   

008D 900000      R     MOV     DPTR,#ucNBits
0090 E0                MOVX    A,@DPTR
0091 FF                MOV     R7,A
0092 7E00              MOV     R6,#00H
0094 7401              MOV     A,#01H
0096 7E00              MOV     R6,#00H
0098 A807              MOV     R0,AR7
009A 08                INC     R0
009B 8005              SJMP    ?C0014
009D         ?C0013:
009D C3                CLR     C
009E 33                RLC     A
009F CE                XCH     A,R6
00A0 33                RLC     A
00A1 CE                XCH     A,R6
00A2         ?C0014:
00A2 D8F9              DJNZ    R0,?C0013
00A4 FF                MOV     R7,A
00A5 EF                MOV     A,R7
00A6 24FF              ADD     A,#0FFH
00A8 FF                MOV     R7,A
00A9 EE                MOV     A,R6
00AA 34FF              ADDC    A,#0FFH
00AC FE                MOV     R6,A
00AD 900000      R     MOV     DPTR,#usMask
00B0 EE                MOV     A,R6
00B1 F0                MOVX    @DPTR,A
00B2 A3                INC     DPTR
00B3 EF                MOV     A,R7
00B4 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 71
00B5 900000      R     MOV     DPTR,#usMask
00B8 E0                MOVX    A,@DPTR
00B9 FE                MOV     R6,A
00BA A3                INC     DPTR
00BB E0                MOVX    A,@DPTR
00BC FF                MOV     R7,A
00BD 900000      R     MOV     DPTR,#usByteOffset
00C0 E0                MOVX    A,@DPTR
00C1 FC                MOV     R4,A
00C2 A3                INC     DPTR
00C3 E0                MOVX    A,@DPTR
00C4 FD                MOV     R5,A
00C5 ED                MOV     A,R5
00C6 75F008            MOV     B,#08H
00C9 A4                MUL     AB
00CA FD                MOV     R5,A
00CB 900000      R     MOV     DPTR,#usBitOffset
00CE E0                MOVX    A,@DPTR
00CF FA                MOV     R2,A
00D0 A3                INC     DPTR
00D1 E0                MOVX    A,@DPTR
00D2 FB                MOV     R3,A
00D3 AC03              MOV     R4,AR3
00D5 C3                CLR     C
00D6 EC                MOV     A,R4
00D7 9D                SUBB    A,R5
00D8 FD                MOV     R5,A
00D9 EF                MOV     A,R7
00DA A805              MOV     R0,AR5
00DC 08                INC     R0
00DD 8005              SJMP    ?C0016
C51 COMPILER V9.00   MBUTILS                                                               06/19/2014 16:55:32 PAGE 7   

00DF         ?C0015:
00DF C3                CLR     C
00E0 33                RLC     A
00E1 CE                XCH     A,R6
00E2 33                RLC     A
00E3 CE                XCH     A,R6
00E4         ?C0016:
00E4 D8F9              DJNZ    R0,?C0015
00E6 FF                MOV     R7,A
00E7 900000      R     MOV     DPTR,#usMask
00EA EE                MOV     A,R6
00EB F0                MOVX    @DPTR,A
00EC A3                INC     DPTR
00ED EF                MOV     A,R7
00EE F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 74
00EF 900000      R     MOV     DPTR,#ucByteBuf
00F2 E0                MOVX    A,@DPTR
00F3 FB                MOV     R3,A
00F4 A3                INC     DPTR
00F5 E0                MOVX    A,@DPTR
00F6 FA                MOV     R2,A
00F7 A3                INC     DPTR
00F8 E0                MOVX    A,@DPTR
00F9 F9                MOV     R1,A
00FA 900000      R     MOV     DPTR,#usByteOffset
00FD E0                MOVX    A,@DPTR
00FE FE                MOV     R6,A
00FF A3                INC     DPTR
0100 E0                MOVX    A,@DPTR
0101 FF                MOV     R7,A
0102 8F82              MOV     DPL,R7
0104 8E83              MOV     DPH,R6
0106 120000      E     LCALL   ?C?CLDOPTR
0109 FF                MOV     R7,A
010A 7E00              MOV     R6,#00H
010C 900000      R     MOV     DPTR,#usWordBuf
010F EE                MOV     A,R6
0110 F0                MOVX    @DPTR,A
0111 A3                INC     DPTR
0112 EF                MOV     A,R7
0113 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 75
0114 900000      R     MOV     DPTR,#usWordBuf
0117 E0                MOVX    A,@DPTR
0118 FC                MOV     R4,A
0119 A3                INC     DPTR
011A E0                MOVX    A,@DPTR
011B FD                MOV     R5,A
011C 900000      R     MOV     DPTR,#ucByteBuf
011F E0                MOVX    A,@DPTR
0120 FB                MOV     R3,A
0121 A3                INC     DPTR
0122 E0                MOVX    A,@DPTR
0123 FA                MOV     R2,A
0124 A3                INC     DPTR
0125 E0                MOVX    A,@DPTR
0126 F9                MOV     R1,A
0127 900000      R     MOV     DPTR,#usByteOffset
012A E0                MOVX    A,@DPTR
012B FE                MOV     R6,A
012C A3                INC     DPTR
C51 COMPILER V9.00   MBUTILS                                                               06/19/2014 16:55:32 PAGE 8   

012D E0                MOVX    A,@DPTR
012E FF                MOV     R7,A
012F EF                MOV     A,R7
0130 2401              ADD     A,#01H
0132 FF                MOV     R7,A
0133 EE                MOV     A,R6
0134 3400              ADDC    A,#00H
0136 FE                MOV     R6,A
0137 8F82              MOV     DPL,R7
0139 8E83              MOV     DPH,R6
013B 120000      E     LCALL   ?C?CLDOPTR
013E FF                MOV     R7,A
013F 7E00              MOV     R6,#00H
0141 EF                MOV     A,R7
0142 7F00              MOV     R7,#00H
0144 FE                MOV     R6,A
0145 EC                MOV     A,R4
0146 4E                ORL     A,R6
0147 FE                MOV     R6,A
0148 ED                MOV     A,R5
0149 4F                ORL     A,R7
014A FF                MOV     R7,A
014B 900000      R     MOV     DPTR,#usWordBuf
014E EE                MOV     A,R6
014F F0                MOVX    @DPTR,A
0150 A3                INC     DPTR
0151 EF                MOV     A,R7
0152 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 78
0153 900000      R     MOV     DPTR,#usMask
0156 E0                MOVX    A,@DPTR
0157 FE                MOV     R6,A
0158 A3                INC     DPTR
0159 E0                MOVX    A,@DPTR
015A FF                MOV     R7,A
015B EF                MOV     A,R7
015C F4                CPL     A
015D FF                MOV     R7,A
015E EE                MOV     A,R6
015F F4                CPL     A
0160 FE                MOV     R6,A
0161 900000      R     MOV     DPTR,#usWordBuf
0164 E0                MOVX    A,@DPTR
0165 FC                MOV     R4,A
0166 A3                INC     DPTR
0167 E0                MOVX    A,@DPTR
0168 FD                MOV     R5,A
0169 EE                MOV     A,R6
016A 5C                ANL     A,R4
016B FE                MOV     R6,A
016C EF                MOV     A,R7
016D 5D                ANL     A,R5
016E FF                MOV     R7,A
016F 900000      R     MOV     DPTR,#usValue
0172 E0                MOVX    A,@DPTR
0173 FC                MOV     R4,A
0174 A3                INC     DPTR
0175 E0                MOVX    A,@DPTR
0176 FD                MOV     R5,A
0177 EE                MOV     A,R6
0178 4C                ORL     A,R4
0179 FE                MOV     R6,A
C51 COMPILER V9.00   MBUTILS                                                               06/19/2014 16:55:32 PAGE 9   

017A EF                MOV     A,R7
017B 4D                ORL     A,R5
017C FF                MOV     R7,A
017D 900000      R     MOV     DPTR,#usWordBuf
0180 EE                MOV     A,R6
0181 F0                MOVX    @DPTR,A
0182 A3                INC     DPTR
0183 EF                MOV     A,R7
0184 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 81
0185 900000      R     MOV     DPTR,#usWordBuf
0188 E0                MOVX    A,@DPTR
0189 FE                MOV     R6,A
018A A3                INC     DPTR
018B E0                MOVX    A,@DPTR
018C FF                MOV     R7,A
018D EF                MOV     A,R7
018E 54FF              ANL     A,#0FFH
0190 FF                MOV     R7,A
0191 900000      R     MOV     DPTR,#ucByteBuf
0194 E0                MOVX    A,@DPTR
0195 FB                MOV     R3,A
0196 A3                INC     DPTR
0197 E0                MOVX    A,@DPTR
0198 FA                MOV     R2,A
0199 A3                INC     DPTR
019A E0                MOVX    A,@DPTR
019B F9                MOV     R1,A
019C 900000      R     MOV     DPTR,#usByteOffset
019F E0                MOVX    A,@DPTR
01A0 FC                MOV     R4,A
01A1 A3                INC     DPTR
01A2 E0                MOVX    A,@DPTR
01A3 FD                MOV     R5,A
01A4 8D82              MOV     DPL,R5
01A6 8C83              MOV     DPH,R4
01A8 EF                MOV     A,R7
01A9 120000      E     LCALL   ?C?CSTOPTR
                                           ; SOURCE LINE # 82
01AC 900000      R     MOV     DPTR,#usWordBuf
01AF E0                MOVX    A,@DPTR
01B0 FE                MOV     R6,A
01B1 A3                INC     DPTR
01B2 E0                MOVX    A,@DPTR
01B3 FF                MOV     R7,A
01B4 EE                MOV     A,R6
01B5 FF                MOV     R7,A
01B6 7E00              MOV     R6,#00H
01B8 900000      R     MOV     DPTR,#ucByteBuf
01BB E0                MOVX    A,@DPTR
01BC FB                MOV     R3,A
01BD A3                INC     DPTR
01BE E0                MOVX    A,@DPTR
01BF FA                MOV     R2,A
01C0 A3                INC     DPTR
01C1 E0                MOVX    A,@DPTR
01C2 F9                MOV     R1,A
01C3 900000      R     MOV     DPTR,#usByteOffset
01C6 E0                MOVX    A,@DPTR
01C7 FC                MOV     R4,A
01C8 A3                INC     DPTR
01C9 E0                MOVX    A,@DPTR
C51 COMPILER V9.00   MBUTILS                                                               06/19/2014 16:55:32 PAGE 10  

01CA FD                MOV     R5,A
01CB ED                MOV     A,R5
01CC 2401              ADD     A,#01H
01CE FD                MOV     R5,A
01CF EC                MOV     A,R4
01D0 3400              ADDC    A,#00H
01D2 FC                MOV     R4,A
01D3 8D82              MOV     DPL,R5
01D5 8C83              MOV     DPH,R4
01D7 EF                MOV     A,R7
01D8 120000      E     LCALL   ?C?CSTOPTR
                                           ; SOURCE LINE # 83
01DB         ?C0001:
01DB 22                RET     
             ; FUNCTION _xMBUtilSetBits (END)

             ; FUNCTION _xMBUtilGetBits (BEGIN)
                                           ; SOURCE LINE # 86
0000 900000      R     MOV     DPTR,#ucByteBuf
0003 EB                MOV     A,R3
0004 F0                MOVX    @DPTR,A
0005 A3                INC     DPTR
0006 EA                MOV     A,R2
0007 F0                MOVX    @DPTR,A
0008 A3                INC     DPTR
0009 E9                MOV     A,R1
000A F0                MOVX    @DPTR,A
000B 900000      R     MOV     DPTR,#usBitOffset
000E EC                MOV     A,R4
000F F0                MOVX    @DPTR,A
0010 A3                INC     DPTR
0011 ED                MOV     A,R5
0012 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 87
                                           ; SOURCE LINE # 95
0013 900000      R     MOV     DPTR,#usBitOffset
0016 E0                MOVX    A,@DPTR
0017 FE                MOV     R6,A
0018 A3                INC     DPTR
0019 E0                MOVX    A,@DPTR
001A FF                MOV     R7,A
001B EF                MOV     A,R7
001C 7803              MOV     R0,#03H
001E         ?C0017:
001E CE                XCH     A,R6
001F C3                CLR     C
0020 13                RRC     A
0021 CE                XCH     A,R6
0022 13                RRC     A
0023 D8F9              DJNZ    R0,?C0017
0025 FF                MOV     R7,A
0026 900000      R     MOV     DPTR,#usByteOffset
0029 EE                MOV     A,R6
002A F0                MOVX    @DPTR,A
002B A3                INC     DPTR
002C EF                MOV     A,R7
002D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 98
002E 900000      R     MOV     DPTR,#usByteOffset
0031 E0                MOVX    A,@DPTR
0032 FE                MOV     R6,A
0033 A3                INC     DPTR
C51 COMPILER V9.00   MBUTILS                                                               06/19/2014 16:55:32 PAGE 11  

0034 E0                MOVX    A,@DPTR
0035 FF                MOV     R7,A
0036 EF                MOV     A,R7
0037 7803              MOV     R0,#03H
0039         ?C0018:
0039 C3                CLR     C
003A 33                RLC     A
003B CE                XCH     A,R6
003C 33                RLC     A
003D CE                XCH     A,R6
003E D8F9              DJNZ    R0,?C0018
0040 FF                MOV     R7,A
0041 900000      R     MOV     DPTR,#usBitOffset
0044 E0                MOVX    A,@DPTR
0045 FC                MOV     R4,A
0046 A3                INC     DPTR
0047 E0                MOVX    A,@DPTR
0048 FD                MOV     R5,A
0049 C3                CLR     C
004A ED                MOV     A,R5
004B 9F                SUBB    A,R7
004C FF                MOV     R7,A
004D EC                MOV     A,R4
004E 9E                SUBB    A,R6
004F FE                MOV     R6,A
0050 900000      R     MOV     DPTR,#usNPreBits
0053 EE                MOV     A,R6
0054 F0                MOVX    @DPTR,A
0055 A3                INC     DPTR
0056 EF                MOV     A,R7
0057 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 101
0058 900000      R     MOV     DPTR,#ucNBits
005B E0                MOVX    A,@DPTR
005C FF                MOV     R7,A
005D 7E00              MOV     R6,#00H
005F 7401              MOV     A,#01H
0061 7E00              MOV     R6,#00H
0063 A807              MOV     R0,AR7
0065 08                INC     R0
0066 8005              SJMP    ?C0020
0068         ?C0019:
0068 C3                CLR     C
0069 33                RLC     A
006A CE                XCH     A,R6
006B 33                RLC     A
006C CE                XCH     A,R6
006D         ?C0020:
006D D8F9              DJNZ    R0,?C0019
006F FF                MOV     R7,A
0070 EF                MOV     A,R7
0071 24FF              ADD     A,#0FFH
0073 FF                MOV     R7,A
0074 EE                MOV     A,R6
0075 34FF              ADDC    A,#0FFH
0077 FE                MOV     R6,A
0078 900000      R     MOV     DPTR,#usMask
007B EE                MOV     A,R6
007C F0                MOVX    @DPTR,A
007D A3                INC     DPTR
007E EF                MOV     A,R7
007F F0                MOVX    @DPTR,A
C51 COMPILER V9.00   MBUTILS                                                               06/19/2014 16:55:32 PAGE 12  

                                           ; SOURCE LINE # 104
0080 900000      R     MOV     DPTR,#ucByteBuf
0083 E0                MOVX    A,@DPTR
0084 FB                MOV     R3,A
0085 A3                INC     DPTR
0086 E0                MOVX    A,@DPTR
0087 FA                MOV     R2,A
0088 A3                INC     DPTR
0089 E0                MOVX    A,@DPTR
008A F9                MOV     R1,A
008B 900000      R     MOV     DPTR,#usByteOffset
008E E0                MOVX    A,@DPTR
008F FE                MOV     R6,A
0090 A3                INC     DPTR
0091 E0                MOVX    A,@DPTR
0092 FF                MOV     R7,A
0093 8F82              MOV     DPL,R7
0095 8E83              MOV     DPH,R6
0097 120000      E     LCALL   ?C?CLDOPTR
009A FF                MOV     R7,A
009B 7E00              MOV     R6,#00H
009D 900000      R     MOV     DPTR,#usWordBuf
00A0 EE                MOV     A,R6
00A1 F0                MOVX    @DPTR,A
00A2 A3                INC     DPTR
00A3 EF                MOV     A,R7
00A4 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 105
00A5 900000      R     MOV     DPTR,#usWordBuf
00A8 E0                MOVX    A,@DPTR
00A9 FC                MOV     R4,A
00AA A3                INC     DPTR
00AB E0                MOVX    A,@DPTR
00AC FD                MOV     R5,A
00AD 900000      R     MOV     DPTR,#ucByteBuf
00B0 E0                MOVX    A,@DPTR
00B1 FB                MOV     R3,A
00B2 A3                INC     DPTR
00B3 E0                MOVX    A,@DPTR
00B4 FA                MOV     R2,A
00B5 A3                INC     DPTR
00B6 E0                MOVX    A,@DPTR
00B7 F9                MOV     R1,A
00B8 900000      R     MOV     DPTR,#usByteOffset
00BB E0                MOVX    A,@DPTR
00BC FE                MOV     R6,A
00BD A3                INC     DPTR
00BE E0                MOVX    A,@DPTR
00BF FF                MOV     R7,A
00C0 EF                MOV     A,R7
00C1 2401              ADD     A,#01H
00C3 FF                MOV     R7,A
00C4 EE                MOV     A,R6
00C5 3400              ADDC    A,#00H
00C7 FE                MOV     R6,A
00C8 8F82              MOV     DPL,R7
00CA 8E83              MOV     DPH,R6
00CC 120000      E     LCALL   ?C?CLDOPTR
00CF FF                MOV     R7,A
00D0 7E00              MOV     R6,#00H
00D2 EF                MOV     A,R7
00D3 7F00              MOV     R7,#00H
C51 COMPILER V9.00   MBUTILS                                                               06/19/2014 16:55:32 PAGE 13  

00D5 FE                MOV     R6,A
00D6 EC                MOV     A,R4
00D7 4E                ORL     A,R6
00D8 FE                MOV     R6,A
00D9 ED                MOV     A,R5
00DA 4F                ORL     A,R7
00DB FF                MOV     R7,A
00DC 900000      R     MOV     DPTR,#usWordBuf
00DF EE                MOV     A,R6
00E0 F0                MOVX    @DPTR,A
00E1 A3                INC     DPTR
00E2 EF                MOV     A,R7
00E3 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 108
00E4 900000      R     MOV     DPTR,#usWordBuf
00E7 E0                MOVX    A,@DPTR
00E8 FE                MOV     R6,A
00E9 A3                INC     DPTR
00EA E0                MOVX    A,@DPTR
00EB FF                MOV     R7,A
00EC 900000      R     MOV     DPTR,#usNPreBits
00EF E0                MOVX    A,@DPTR
00F0 FC                MOV     R4,A
00F1 A3                INC     DPTR
00F2 E0                MOVX    A,@DPTR
00F3 FD                MOV     R5,A
00F4 EF                MOV     A,R7
00F5 A805              MOV     R0,AR5
00F7 08                INC     R0
00F8 8005              SJMP    ?C0022
00FA         ?C0021:
00FA CE                XCH     A,R6
00FB C3                CLR     C
00FC 13                RRC     A
00FD CE                XCH     A,R6
00FE 13                RRC     A
00FF         ?C0022:
00FF D8F9              DJNZ    R0,?C0021
0101 FF                MOV     R7,A
0102 900000      R     MOV     DPTR,#usWordBuf
0105 EE                MOV     A,R6
0106 F0                MOVX    @DPTR,A
0107 A3                INC     DPTR
0108 EF                MOV     A,R7
0109 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 111
010A 900000      R     MOV     DPTR,#usWordBuf
010D E0                MOVX    A,@DPTR
010E FE                MOV     R6,A
010F A3                INC     DPTR
0110 E0                MOVX    A,@DPTR
0111 FF                MOV     R7,A
0112 900000      R     MOV     DPTR,#usMask
0115 E0                MOVX    A,@DPTR
0116 FC                MOV     R4,A
0117 A3                INC     DPTR
0118 E0                MOVX    A,@DPTR
0119 FD                MOV     R5,A
011A EE                MOV     A,R6
011B 5C                ANL     A,R4
011C FE                MOV     R6,A
011D EF                MOV     A,R7
C51 COMPILER V9.00   MBUTILS                                                               06/19/2014 16:55:32 PAGE 14  

011E 5D                ANL     A,R5
011F FF                MOV     R7,A
0120 900000      R     MOV     DPTR,#usWordBuf
0123 EE                MOV     A,R6
0124 F0                MOVX    @DPTR,A
0125 A3                INC     DPTR
0126 EF                MOV     A,R7
0127 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 113
0128 900000      R     MOV     DPTR,#usWordBuf
012B E0                MOVX    A,@DPTR
012C FE                MOV     R6,A
012D A3                INC     DPTR
012E E0                MOVX    A,@DPTR
012F FF                MOV     R7,A
                                           ; SOURCE LINE # 114
0130         ?C0002:
0130 22                RET     
             ; FUNCTION _xMBUtilGetBits (END)

             ; FUNCTION _prveMBError2Exception (BEGIN)
                                           ; SOURCE LINE # 117
0000 900000      R     MOV     DPTR,#eErrorCode
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 118
                                           ; SOURCE LINE # 121
0005 900000      R     MOV     DPTR,#eErrorCode
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A EF                MOV     A,R7
000B 120000      E     LCALL   ?C?CCASE
000E 0000        R     DW      ?C0004
0010 00                DB      00H
0011 0000        R     DW      ?C0005
0013 01                DB      01H
0014 0000        R     DW      ?C0006
0016 07                DB      07H
0017 0000              DW      00H
0019 0000        R     DW      ?C0007
                                           ; SOURCE LINE # 122
                                           ; SOURCE LINE # 123
001B         ?C0004:
                                           ; SOURCE LINE # 124
001B 900000      R     MOV     DPTR,#eStatus
001E E4                CLR     A
001F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 125
0020 8016              SJMP    ?C0003
                                           ; SOURCE LINE # 127
0022         ?C0005:
                                           ; SOURCE LINE # 128
0022 900000      R     MOV     DPTR,#eStatus
0025 7402              MOV     A,#02H
0027 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 129
0028 800E              SJMP    ?C0003
                                           ; SOURCE LINE # 131
002A         ?C0006:
                                           ; SOURCE LINE # 132
002A 900000      R     MOV     DPTR,#eStatus
002D 7406              MOV     A,#06H
C51 COMPILER V9.00   MBUTILS                                                               06/19/2014 16:55:32 PAGE 15  

002F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 133
0030 8006              SJMP    ?C0003
                                           ; SOURCE LINE # 135
0032         ?C0007:
                                           ; SOURCE LINE # 136
0032 900000      R     MOV     DPTR,#eStatus
0035 7404              MOV     A,#04H
0037 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 137
                                           ; SOURCE LINE # 138
0038         ?C0003:
                                           ; SOURCE LINE # 140
0038 900000      R     MOV     DPTR,#eStatus
003B E0                MOVX    A,@DPTR
003C FF                MOV     R7,A
                                           ; SOURCE LINE # 141
003D         ?C0008:
003D 22                RET     
             ; FUNCTION _prveMBError2Exception (END)

C51 COMPILER V9.00   MBUTILS                                                               06/19/2014 16:55:32 PAGE 16  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


eMBErrorCode . . . . . . . . . . . . .  TYPEDEF  -----  U_CHAR   -----  1
P2 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A0H  1
P3 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B0H  1
EV_FRAME_SENT. . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
ULONG. . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_LONG   -----  4
ADCSTAT. . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D8H  1
pxMBFunctionHandler. . . . . . . . . .  TYPEDEF  -----  PTR      -----  3
MB_PAR_ODD . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
IE . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A8H  1
MB_EX_SLAVE_BUSY . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
EV_EXECUTE . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
SHORT. . . . . . . . . . . . . . . . .  TYPEDEF  -----  INT      -----  2
size_t . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_INT    -----  2
EV_FRAME_RECEIVED. . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
MB_EX_ACKNOWLEDGE. . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
xMBFunctionHandler . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  4
  ucFunctionCode . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  pxHandler. . . . . . . . . . . . . .  MEMBER   -----  PTR      0001H  3
IP . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B8H  1
MB_EX_GATEWAY_PATH_FAILED. . . . . . .  E_CONST  -----  U_CHAR   -----  1
MB_EILLSTATE . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
MB_EX_NONE . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CHAR . . . . . . . . . . . . . . . . .  TYPEDEF  -----  CHAR     -----  1
eMBEventType . . . . . . . . . . . . .  TYPEDEF  -----  U_CHAR   -----  1
I2CCON . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E8H  1
MB_ETIMEDOUT . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
DCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E8H  1
eMBException . . . . . . . . . . . . .  TYPEDEF  -----  U_CHAR   -----  1
BOOL . . . . . . . . . . . . . . . . .  TYPEDEF  -----  CHAR     -----  1
MB_EINVAL. . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
LONG . . . . . . . . . . . . . . . . .  TYPEDEF  -----  LONG     -----  4
MB_ENOREG. . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
SCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0098H  1
MB_EX_ILLEGAL_FUNCTION . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
TCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0088H  1
MB_REG_WRITE . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
MB_ENOERR. . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
MB_ENORES. . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
_prveMBError2Exception . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  eErrorCode . . . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0000H  1
  eStatus. . . . . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0001H  1
MB_EX_ILLEGAL_DATA_VALUE . . . . . . .  E_CONST  -----  U_CHAR   -----  1
eMBRegisterMode. . . . . . . . . . . .  TYPEDEF  -----  U_CHAR   -----  1
MB_REG_READ. . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
MB_EIO . . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
SPICON . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00F8H  1
MB_EX_ILLEGAL_DATA_ADDRESS . . . . . .  E_CONST  -----  U_CHAR   -----  1
MB_TCP . . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
MB_ASCII . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
MB_EX_GATEWAY_TGT_FAILED . . . . . . .  E_CONST  -----  U_CHAR   -----  1
_xMBUtilGetBits. . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  ucByteBuf. . . . . . . . . . . . . .  AUTO     XDATA  PTR      0000H  3
  usBitOffset. . . . . . . . . . . . .  AUTO     XDATA  U_INT    0003H  2
  ucNBits. . . . . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0005H  1
  usWordBuf. . . . . . . . . . . . . .  AUTO     XDATA  U_INT    0006H  2
  usMask . . . . . . . . . . . . . . .  AUTO     XDATA  U_INT    0008H  2
  usByteOffset . . . . . . . . . . . .  AUTO     XDATA  U_INT    000AH  2
C51 COMPILER V9.00   MBUTILS                                                               06/19/2014 16:55:32 PAGE 17  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  usNPreBits . . . . . . . . . . . . .  AUTO     XDATA  U_INT    000CH  2
MB_PAR_EVEN. . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
MB_PAR_NONE. . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
MB_EPORTERR. . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
USHORT . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_INT    -----  2
T2CON. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C8H  1
MB_EX_SLAVE_DEVICE_FAILURE . . . . . .  E_CONST  -----  U_CHAR   -----  1
MB_RTU . . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
_xMBUtilSetBits. . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  ucByteBuf. . . . . . . . . . . . . .  AUTO     XDATA  PTR      0000H  3
  usBitOffset. . . . . . . . . . . . .  AUTO     XDATA  U_INT    0003H  2
  ucNBits. . . . . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0005H  1
  ucValue. . . . . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0006H  1
  usWordBuf. . . . . . . . . . . . . .  AUTO     XDATA  U_INT    0007H  2
  usMask . . . . . . . . . . . . . . .  AUTO     XDATA  U_INT    0009H  2
  usByteOffset . . . . . . . . . . . .  AUTO     XDATA  U_INT    000BH  2
  usNPreBits . . . . . . . . . . . . .  AUTO     XDATA  U_INT    000DH  2
  usValue. . . . . . . . . . . . . . .  AUTO     XDATA  U_INT    000FH  2
wchar_t. . . . . . . . . . . . . . . .  TYPEDEF  -----  CHAR     -----  1
MB_EX_MEMORY_PARITY_ERROR. . . . . . .  E_CONST  -----  U_CHAR   -----  1
eMBParity. . . . . . . . . . . . . . .  TYPEDEF  -----  U_CHAR   -----  1
EV_READY . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
UCHAR. . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_CHAR   -----  1
PSW. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D0H  1
eMBMode. . . . . . . . . . . . . . . .  TYPEDEF  -----  U_CHAR   -----  1
WDCON. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C0H  1


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    843    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     33    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  2 WARNING(S),  0 ERROR(S)
