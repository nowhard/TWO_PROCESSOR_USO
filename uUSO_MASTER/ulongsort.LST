C51 COMPILER V9.00   ULONGSORT                                                             04/24/2015 12:10:37 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE ULONGSORT
OBJECT MODULE PLACED IN ulongsort.OBJ
COMPILER INVOKED BY: C:\Program Files\Keil\C51\BIN\C51.EXE ulongsort.c LARGE OPTIMIZE(9,SPEED) BROWSE ORDER NOAREGS MODA
                    -B2 DEBUG OBJECTEXTEND

line level    source

   1          #include "ulongsort.h"
   2          
   3          volatile unsigned long mas_copy[ADC_BUF_SIZE];
   4          volatile unsigned char xdata mid_cycle_counter=0;
   5          volatile unsigned long  temp;
   6          
   7          //------------------------------------------------
   8           PT_THREAD(ulongsort_process(struct pt *pt))
   9           {
  10   1         static volatile  unsigned char counter=0,i=0,j=0;
  11   1         
  12   1         PT_BEGIN(pt);
  13   3      
  14   3        while(1) 
  15   3        {
  16   4                 PT_DELAY(pt,10);
  17   4                //------------ищем новое измерение-----------------
  18   4      
  19   4                      if(!adc_channels[mid_cycle_counter].new_measuring)
  20   4                      {
  21   5                              counter=0;
  22   5                              while((!adc_channels[mid_cycle_counter].new_measuring) && (counter!=ADC_CHANNELS_NUM))
  23   5                              {
  24   6                                      mid_cycle_counter= (mid_cycle_counter+1)&0x7;
  25   6                                      counter++;
  26   6                                      PT_YIELD(pt);//отдаем другим процессам
  27   6                              }
  28   5                              
  29   5                              if(counter==ADC_CHANNELS_NUM)//если нового измерения не найдено-рестарт процесса
  30   5                              {
  31   6                                  PT_RESTART(pt);
  32   6                              }
  33   5                      }
  34   4              
  35   4                //-----------------копируем во временный массив-----------------------------
  36   4                      memcpy(mas_copy,adc_channels[mid_cycle_counter].ADC_BUF_UN,ADC_BUF_SIZE*sizeof(unsigned long)); 
  37   4                      PT_YIELD(pt);//отдаем другим процессам
  38   4                //--------------сортировка пузырьком--------------------------------
  39   4                        for (i=ADC_BUF_SIZE-1;i>0;i--)
  40   4                        {
  41   5                          for (j=0;j<i;j++)
  42   5                          {
  43   6                              if(mas_copy[j]>mas_copy[j+1])
  44   6                              {
  45   7                                  temp=mas_copy[j];
  46   7                                  mas_copy[j]=mas_copy[j+1];
  47   7                                  mas_copy[j+1]=temp;
  48   7                              }
  49   6                                      PT_YIELD(pt);
  50   6                           }
  51   5                        }
  52   4                 //-----------находим медиану--------------------
  53   4                      channels[mid_cycle_counter].channel_data=(mas_copy[(ADC_BUF_SIZE>>1)-1]+mas_copy[ADC_BUF_SIZE>>1])>>1;
  54   4      
C51 COMPILER V9.00   ULONGSORT                                                             04/24/2015 12:10:37 PAGE 2   

  55   4                      if(channels[mid_cycle_counter].calibrate.cal.calibrate)
  56   4                      {
  57   5                              channels[mid_cycle_counter].channel_data_calibrate=GetCalibrateVal(mid_cycle_counter,channels[mid_cycl
             -e_counter].channel_data);     //калиброванная величина
  58   5                      }
  59   4      
  60   4                      adc_channels[mid_cycle_counter].new_measuring=0;
  61   4                      PT_RESTART(pt);
  62   4                //----------------------------------------------      
  63   4         }
  64   3         PT_END(pt);
  65   1       }
  66          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    591    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     40       4
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
